/* A recursive-descent parser generated by peg 0.1.18 */

#include <ctype.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#ifdef __cplusplus
  #include <vector>
#endif
#define YYRULECOUNT 117
#line 18 "n1ql.leg"

#include "n1ql_parser_internal.hh"
#include "n1ql_parser.hh"

namespace litecore::n1ql {

#ifndef YY_MALLOC
#define YY_MALLOC(C, N)		malloc(N)
#endif
#ifndef YY_REALLOC
#define YY_REALLOC(C, P, N)	realloc(P, N)
#endif
#ifndef YY_FREE
#define YY_FREE(C, P)		free(P)
#endif
#ifndef YY_LOCAL
#define YY_LOCAL(T)	static T
#endif
#ifndef YY_ACTION
#define YY_ACTION(T)	static T
#endif
#ifndef YY_RULE
#define YY_RULE(T)	static T
#endif
#ifndef YY_PARSE
#define YY_PARSE(T)	T
#endif
#ifndef YYPARSE
#define YYPARSE		yyparse
#endif
#ifndef YYPARSEFROM
#define YYPARSEFROM	yyparsefrom
#endif
#ifndef YYRELEASE
#define YYRELEASE	yyrelease
#endif
#ifndef YY_BEGIN
#define YY_BEGIN	( yy->_begin= yy->_pos, 1)
#endif
#ifndef YY_END
#define YY_END		( yy->_end= yy->_pos, 1)
#endif
#ifdef YY_DEBUG
# define yyprintf(args)	fprintf args
#else
# define yyprintf(args)
#endif
#ifndef YYSTYPE
#define YYSTYPE	int
#endif
#ifndef YY_STACK_SIZE
#define YY_STACK_SIZE 128
#endif

#ifndef YY_BUFFER_SIZE
#define YY_BUFFER_SIZE 1024
#endif

#ifndef YY_PART

typedef struct _yycontext yycontext;
typedef void (*yyaction)(yycontext *yy, char *yytext, int yyleng);
typedef struct _yythunk { int begin, end;  yyaction  action;  struct _yythunk *next; } yythunk;

struct _yycontext {
  char     *_buf;
  int       _buflen;
  int       _pos;
  int       _limit;
  int       _maxpos;
  char     *_text;
  int       _textlen;
  int       _begin;
  int       _end;
  int       _textmax;
  yythunk  *_thunks;
  int       _thunkslen;
  int       _thunkpos;
  YYSTYPE   _;
  YYSTYPE  *_val;
#ifdef __cplusplus
  std::vector<YYSTYPE>* _vals;
#else
  YYSTYPE  *_vals;
  int       _valslen;
#endif
#ifdef YY_CTX_MEMBERS
  YY_CTX_MEMBERS
#endif
};

#ifdef YY_CTX_LOCAL
#define YY_CTX_PARAM_	yycontext *yyctx,
#define YY_CTX_PARAM	yycontext *yyctx
#define YY_CTX_ARG_	yyctx,
#define YY_CTX_ARG	yyctx
#ifndef YY_INPUT
#define YY_INPUT(yy, buf, result, max_size)		\
  {							\
    int yyc= getchar();					\
    result= (EOF == yyc) ? 0 : (*(buf)= yyc, 1);	\
    yyprintf((stderr, "<%c>", yyc));			\
  }
#endif
#else
#define YY_CTX_PARAM_
#define YY_CTX_PARAM
#define YY_CTX_ARG_
#define YY_CTX_ARG
yycontext yyctx_= { 0, 0 };
yycontext *yyctx= &yyctx_;
#ifndef YY_INPUT
#define YY_INPUT(buf, result, max_size)			\
  {							\
    int yyc= getchar();					\
    result= (EOF == yyc) ? 0 : (*(buf)= yyc, 1);	\
    yyprintf((stderr, "<%c>", yyc));			\
  }
#endif
#endif

YY_LOCAL(int) yyrefill(yycontext *yy)
{
  int yyn;
  while (yy->_buflen - yy->_pos < 512)
    {
      yy->_buflen *= 2;
      yy->_buf= (char *)YY_REALLOC(yy, yy->_buf, yy->_buflen);
    }
#ifdef YY_CTX_LOCAL
  YY_INPUT(yy, (yy->_buf + yy->_pos), yyn, (yy->_buflen - yy->_pos));
#else
  YY_INPUT((yy->_buf + yy->_pos), yyn, (yy->_buflen - yy->_pos));
#endif
  if (!yyn) return 0;
  yy->_limit += yyn;
  return 1;
}

YY_LOCAL(void) yyrecordMaxPos(yycontext *yy)
{
  if (yy->_pos > yy->_maxpos) {
    yy->_maxpos = yy->_pos;
    yyprintf((stderr, "       maxpos=%d [after '%c']\n", yy->_maxpos, yy->_buf[yy->_maxpos-1]));
  }
}

YY_LOCAL(int) yymatchDot(yycontext *yy)
{
  if (yy->_pos >= yy->_limit && !yyrefill(yy)) return 0;
  ++yy->_pos;
  yyrecordMaxPos(yy);
  return 1;
}

YY_LOCAL(int) yymatchChar(yycontext *yy, int c)
{
  if (yy->_pos >= yy->_limit && !yyrefill(yy)) return 0;
  if ((unsigned char)yy->_buf[yy->_pos] == c)
    {
      ++yy->_pos;
      yyrecordMaxPos(yy);
      yyprintf((stderr, "  ok   yymatchChar(yy, %c) @ %s\n", c, yy->_buf+yy->_pos));
      return 1;
    }
  yyprintf((stderr, "  fail yymatchChar(yy, %c) @ %s\n", c, yy->_buf+yy->_pos));
  return 0;
}

YY_LOCAL(int) yymatchString(yycontext *yy, const char *s)
{
  int yysav= yy->_pos;
  while (*s)
    {
      if (yy->_pos >= yy->_limit && !yyrefill(yy)) return 0;
      if (yy->_buf[yy->_pos] != *s)
	{
	  yy->_pos= yysav;
	  return 0;
	}
      ++s;
      ++yy->_pos;
    }
  yyrecordMaxPos(yy);
  return 1;
}

YY_LOCAL(int) yymatchIString(yycontext *yy, const char *s)
{
  int yysav= yy->_pos;
  while (*s)
    {
      if (yy->_pos >= yy->_limit && !yyrefill(yy)) return 0;
      if (tolower(yy->_buf[yy->_pos]) != *s)
        {
          yy->_pos= yysav;
          return 0;
        }
      ++s;
      ++yy->_pos;
    }
  yyrecordMaxPos(yy);
  return 1;
}

YY_LOCAL(int) yymatchClass(yycontext *yy, unsigned char *bits)
{
  int c;
  if (yy->_pos >= yy->_limit && !yyrefill(yy)) return 0;
  c= (unsigned char)yy->_buf[yy->_pos];
  if (bits[c >> 3] & (1 << (c & 7)))
    {
      ++yy->_pos;
      yyrecordMaxPos(yy);
      yyprintf((stderr, "  ok   yymatchClass @ %s\n", yy->_buf+yy->_pos));
      return 1;
    }
  yyprintf((stderr, "  fail yymatchClass @ %s\n", yy->_buf+yy->_pos));
  return 0;
}

YY_LOCAL(void) yyDo(yycontext *yy, yyaction action, int begin, int end)
{
  while (yy->_thunkpos >= yy->_thunkslen)
    {
      yy->_thunkslen *= 2;
      yy->_thunks= (yythunk *)YY_REALLOC(yy, yy->_thunks, sizeof(yythunk) * yy->_thunkslen);
    }
  yy->_thunks[yy->_thunkpos].begin=  begin;
  yy->_thunks[yy->_thunkpos].end=    end;
  yy->_thunks[yy->_thunkpos].action= action;
  ++yy->_thunkpos;
}

YY_LOCAL(int) yyText(yycontext *yy, int begin, int end)
{
  int yyleng= end - begin;
  if (yyleng <= 0)
    yyleng= 0;
  else
    {
      while (yy->_textlen < (yyleng + 1))
	{
	  yy->_textlen *= 2;
	  yy->_text= (char *)YY_REALLOC(yy, yy->_text, yy->_textlen);
	}
      memcpy(yy->_text, yy->_buf + begin, yyleng);
    }
  yy->_text[yyleng]= '\0';
  return yyleng;
}

YY_LOCAL(void) yyDone(yycontext *yy)
{
  int pos;
  for (pos= 0;  pos < yy->_thunkpos;  ++pos)
    {
      yythunk *thunk= &yy->_thunks[pos];
      int yyleng= thunk->end ? yyText(yy, thunk->begin, thunk->end) : thunk->begin;
      yyprintf((stderr, "DO [%d] %p %s\n", pos, thunk->action, yy->_text));
      thunk->action(yy, yy->_text, yyleng);
    }
  yy->_thunkpos= 0;
}

YY_LOCAL(void) yyCommit(yycontext *yy)
{
  if ((yy->_limit -= yy->_pos))
    {
      memmove(yy->_buf, yy->_buf + yy->_pos, yy->_limit);
    }
  yy->_begin -= yy->_pos;
  yy->_end -= yy->_pos;
  yy->_pos= yy->_thunkpos= 0;
}

YY_LOCAL(int) yyAccept(yycontext *yy, int tp0)
{
  if (tp0)
    {
      fprintf(stderr, "accept denied at %d\n", tp0);
      return 0;
    }
  else
    {
      yyDone(yy);
      yyCommit(yy);
    }
  return 1;
}

YY_LOCAL(void) yyPush(yycontext *yy, char *text, int count)
{
#ifdef __cplusplus
  yy->_vals->resize(yy->_vals->size() + count);
  yy->_val = &yy->_vals->back();
#else
  yy->_val += count;
  while (yy->_valslen <= yy->_val - yy->_vals)
    {
      long offset= yy->_val - yy->_vals;
      size_t oldlen = yy->_valslen;
      yy->_valslen *= 2;
      yy->_vals= (YYSTYPE *)YY_REALLOC(yy, yy->_vals, sizeof(YYSTYPE) * yy->_valslen);
      memset(&yy->_vals[oldlen], 0, sizeof(YYSTYPE) * oldlen);
      yy->_val= yy->_vals + offset;
    }
#endif
}
YY_LOCAL(void) yyPop(yycontext *yy, char *text, int count)
{
#ifdef __cplusplus
  yy->_vals->resize(yy->_vals->size() - count);
  yy->_val = &yy->_vals->back();
#else
  yy->_val -= count;
#endif
}
YY_LOCAL(void) yySet(yycontext *yy, char *text, int count)   { yy->_val[count]= yy->_; }

#endif /* YY_PART */

#define	YYACCEPT	yyAccept(yy, yythunkpos0)

YY_RULE(int) yyrDIGIT(yycontext *yy); /* 117 */
YY_RULE(int) yyrBOOLEAN_LITERAL(yycontext *yy); /* 116 */
YY_RULE(int) yyrFLOAT_LITERAL(yycontext *yy); /* 115 */
YY_RULE(int) yyrSTRING_LITERAL(yycontext *yy); /* 114 */
YY_RULE(int) yyrTRUE(yycontext *yy); /* 113 */
YY_RULE(int) yyrFALSE(yycontext *yy); /* 112 */
YY_RULE(int) yyrreservedWord(yycontext *yy); /* 111 */
YY_RULE(int) yyrfunctionName(yycontext *yy); /* 110 */
YY_RULE(int) yyrindexTable(yycontext *yy); /* 109 */
YY_RULE(int) yyrINT_LITERAL(yycontext *yy); /* 108 */
YY_RULE(int) yyrpropertyName(yycontext *yy); /* 107 */
YY_RULE(int) yyrproperty(yycontext *yy); /* 106 */
YY_RULE(int) yyrfunction(yycontext *yy); /* 105 */
YY_RULE(int) yyrEXISTS(yycontext *yy); /* 104 */
YY_RULE(int) yyrOP_PREFIX(yycontext *yy); /* 103 */
YY_RULE(int) yyrdictLiteral(yycontext *yy); /* 102 */
YY_RULE(int) yyrliteral(yycontext *yy); /* 101 */
YY_RULE(int) yyrbaseExpr_(yycontext *yy); /* 100 */
YY_RULE(int) yyrWB(yycontext *yy); /* 99 */
YY_RULE(int) yyrcollationLang(yycontext *yy); /* 98 */
YY_RULE(int) yyrcollation(yycontext *yy); /* 97 */
YY_RULE(int) yyrCOLLATE(yycontext *yy); /* 96 */
YY_RULE(int) yyrbaseExpr(yycontext *yy); /* 95 */
YY_RULE(int) yyrarrayLiteral(yycontext *yy); /* 94 */
YY_RULE(int) yyrparenExprs(yycontext *yy); /* 93 */
YY_RULE(int) yyrselectExpr(yycontext *yy); /* 92 */
YY_RULE(int) yyrIN_OR_NOT(yycontext *yy); /* 91 */
YY_RULE(int) yyrOR(yycontext *yy); /* 90 */
YY_RULE(int) yyrBETWEEN(yycontext *yy); /* 89 */
YY_RULE(int) yyrLIKE(yycontext *yy); /* 88 */
YY_RULE(int) yyrOP_PREC_1(yycontext *yy); /* 87 */
YY_RULE(int) yyrexpr0(yycontext *yy); /* 86 */
YY_RULE(int) yyrOP_PREC_2(yycontext *yy); /* 85 */
YY_RULE(int) yyrexpr1(yycontext *yy); /* 84 */
YY_RULE(int) yyrOP_PREC_3(yycontext *yy); /* 83 */
YY_RULE(int) yyrexpr2(yycontext *yy); /* 82 */
YY_RULE(int) yyrOP_PREC_4(yycontext *yy); /* 81 */
YY_RULE(int) yyrexpr3(yycontext *yy); /* 80 */
YY_RULE(int) yyrOP_PREC_5(yycontext *yy); /* 79 */
YY_RULE(int) yyrexpr4(yycontext *yy); /* 78 */
YY_RULE(int) yyrOP_PREC_6(yycontext *yy); /* 77 */
YY_RULE(int) yyrbetweenExpression(yycontext *yy); /* 76 */
YY_RULE(int) yyrlikeExpression(yycontext *yy); /* 75 */
YY_RULE(int) yyrinExpression(yycontext *yy); /* 74 */
YY_RULE(int) yyrexpr5(yycontext *yy); /* 73 */
YY_RULE(int) yyrOP_PREC_7(yycontext *yy); /* 72 */
YY_RULE(int) yyrexpr6(yycontext *yy); /* 71 */
YY_RULE(int) yyrOP_PREC_8(yycontext *yy); /* 70 */
YY_RULE(int) yyrexpr7(yycontext *yy); /* 69 */
YY_RULE(int) yyrcollateSuffix(yycontext *yy); /* 68 */
YY_RULE(int) yyrexpr8(yycontext *yy); /* 67 */
YY_RULE(int) yyrVALUED(yycontext *yy); /* 66 */
YY_RULE(int) yyrMISSING(yycontext *yy); /* 65 */
YY_RULE(int) yyrIS(yycontext *yy); /* 64 */
YY_RULE(int) yyrNULL(yycontext *yy); /* 63 */
YY_RULE(int) yyrNOT(yycontext *yy); /* 62 */
YY_RULE(int) yyrPOST_OP_PREC_6(yycontext *yy); /* 61 */
YY_RULE(int) yyrSOME(yycontext *yy); /* 60 */
YY_RULE(int) yyrANY(yycontext *yy); /* 59 */
YY_RULE(int) yyrEVERY(yycontext *yy); /* 58 */
YY_RULE(int) yyrAND(yycontext *yy); /* 57 */
YY_RULE(int) yyranyOrSome(yycontext *yy); /* 56 */
YY_RULE(int) yyrSATISFIES(yycontext *yy); /* 55 */
YY_RULE(int) yyrIN(yycontext *yy); /* 54 */
YY_RULE(int) yyrvariableName(yycontext *yy); /* 53 */
YY_RULE(int) yyranyEvery(yycontext *yy); /* 52 */
YY_RULE(int) yyranyEveryExpression(yycontext *yy); /* 51 */
YY_RULE(int) yyrEND(yycontext *yy); /* 50 */
YY_RULE(int) yyrELSE(yycontext *yy); /* 49 */
YY_RULE(int) yyrTHEN(yycontext *yy); /* 48 */
YY_RULE(int) yyrWHEN(yycontext *yy); /* 47 */
YY_RULE(int) yyrCASE(yycontext *yy); /* 46 */
YY_RULE(int) yyrcaseExpression(yycontext *yy); /* 45 */
YY_RULE(int) yyrexpr9(yycontext *yy); /* 44 */
YY_RULE(int) yyrindexName(yycontext *yy); /* 43 */
YY_RULE(int) yyrDESC(yycontext *yy); /* 42 */
YY_RULE(int) yyrASC(yycontext *yy); /* 41 */
YY_RULE(int) yyrorder(yycontext *yy); /* 40 */
YY_RULE(int) yyrordering(yycontext *yy); /* 39 */
YY_RULE(int) yyrORDER(yycontext *yy); /* 38 */
YY_RULE(int) yyrHAVING(yycontext *yy); /* 37 */
YY_RULE(int) yyrBY(yycontext *yy); /* 36 */
YY_RULE(int) yyrGROUP(yycontext *yy); /* 35 */
YY_RULE(int) yyrpropertyPath(yycontext *yy); /* 34 */
YY_RULE(int) yyrUNNEST(yycontext *yy); /* 33 */
YY_RULE(int) yyrJOIN(yycontext *yy); /* 32 */
YY_RULE(int) yyrCROSS(yycontext *yy); /* 31 */
YY_RULE(int) yyrINNER(yycontext *yy); /* 30 */
YY_RULE(int) yyrOUTER(yycontext *yy); /* 29 */
YY_RULE(int) yyrLEFT(yycontext *yy); /* 28 */
YY_RULE(int) yyrON(yycontext *yy); /* 27 */
YY_RULE(int) yyrjoinOperator(yycontext *yy); /* 26 */
YY_RULE(int) yyrIDENTIFIER(yycontext *yy); /* 25 */
YY_RULE(int) yyrcollectionAlias(yycontext *yy); /* 24 */
YY_RULE(int) yyrcollectionName(yycontext *yy); /* 23 */
YY_RULE(int) yyrunnest(yycontext *yy); /* 22 */
YY_RULE(int) yyrjoin(yycontext *yy); /* 21 */
YY_RULE(int) yyrdataSource(yycontext *yy); /* 20 */
YY_RULE(int) yyrFROM(yycontext *yy); /* 19 */
YY_RULE(int) yyrcolumnAlias(yycontext *yy); /* 18 */
YY_RULE(int) yyrAS(yycontext *yy); /* 17 */
YY_RULE(int) yyrselectResult(yycontext *yy); /* 16 */
YY_RULE(int) yyrOFFSET(yycontext *yy); /* 15 */
YY_RULE(int) yyrLIMIT(yycontext *yy); /* 14 */
YY_RULE(int) yyrorderBy(yycontext *yy); /* 13 */
YY_RULE(int) yyrhaving(yycontext *yy); /* 12 */
YY_RULE(int) yyrgroupBy(yycontext *yy); /* 11 */
YY_RULE(int) yyrexpression(yycontext *yy); /* 10 */
YY_RULE(int) yyrWHERE(yycontext *yy); /* 9 */
YY_RULE(int) yyrfrom(yycontext *yy); /* 8 */
YY_RULE(int) yyrALL(yycontext *yy); /* 7 */
YY_RULE(int) yyrDISTINCT(yycontext *yy); /* 6 */
YY_RULE(int) yyrSELECT(yycontext *yy); /* 5 */
YY_RULE(int) yyrselectResults(yycontext *yy); /* 4 */
YY_RULE(int) yyrselectStatement(yycontext *yy); /* 3 */
YY_RULE(int) yyr_(yycontext *yy); /* 2 */
YY_RULE(int) yyrn1ql(yycontext *yy); /* 1 */

YY_ACTION(void) yy_2_STRING_LITERAL(yycontext *yy, char *yytext, int yyleng)
{
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_2_STRING_LITERAL\n"));
  {
#line 492
   y_ = unquote(yytext, '"');;
  }
#undef yythunkpos
#undef yypos
#undef yy
}
YY_ACTION(void) yy_1_STRING_LITERAL(yycontext *yy, char *yytext, int yyleng)
{
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_1_STRING_LITERAL\n"));
  {
#line 491
   y_ = unquote(yytext, '\'');;
  }
#undef yythunkpos
#undef yypos
#undef yy
}
YY_ACTION(void) yy_1_INT_LITERAL(yycontext *yy, char *yytext, int yyleng)
{
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_1_INT_LITERAL\n"));
  {
#line 484
   y_ = (long long)atoll(yytext);;
  }
#undef yythunkpos
#undef yypos
#undef yy
}
YY_ACTION(void) yy_1_FLOAT_LITERAL(yycontext *yy, char *yytext, int yyleng)
{
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_1_FLOAT_LITERAL\n"));
  {
#line 480
   double d;
                                          sscanf(yytext, "%lf", &d);
                                          y_ = d; ;
  }
#undef yythunkpos
#undef yypos
#undef yy
}
YY_ACTION(void) yy_2_BOOLEAN_LITERAL(yycontext *yy, char *yytext, int yyleng)
{
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_2_BOOLEAN_LITERAL\n"));
  {
#line 476
   y_ = false;;
  }
#undef yythunkpos
#undef yypos
#undef yy
}
YY_ACTION(void) yy_1_BOOLEAN_LITERAL(yycontext *yy, char *yytext, int yyleng)
{
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_1_BOOLEAN_LITERAL\n"));
  {
#line 475
   y_ = true;;
  }
#undef yythunkpos
#undef yypos
#undef yy
}
YY_ACTION(void) yy_2_literal(yycontext *yy, char *yytext, int yyleng)
{
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_2_literal\n"));
  {
#line 472
   y_ = op("MISSING");;
  }
#undef yythunkpos
#undef yypos
#undef yy
}
YY_ACTION(void) yy_1_literal(yycontext *yy, char *yytext, int yyleng)
{
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_1_literal\n"));
  {
#line 471
   y_ = nullValue; ;
  }
#undef yythunkpos
#undef yypos
#undef yy
}
YY_ACTION(void) yy_3_dictLiteral(yycontext *yy, char *yytext, int yyleng)
{
#define v yy->_val[-1]
#define e yy->_val[-2]
#define k yy->_val[-3]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_3_dictLiteral\n"));
  {
#line 460
   y_ = e.isNull() ? Any(MutableDict::newDict()) : e;;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef v
#undef e
#undef k
}
YY_ACTION(void) yy_2_dictLiteral(yycontext *yy, char *yytext, int yyleng)
{
#define v yy->_val[-1]
#define e yy->_val[-2]
#define k yy->_val[-3]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_2_dictLiteral\n"));
  {
#line 458
   setAny(e, slice(k.as<string>()), v); ;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef v
#undef e
#undef k
}
YY_ACTION(void) yy_1_dictLiteral(yycontext *yy, char *yytext, int yyleng)
{
#define v yy->_val[-1]
#define e yy->_val[-2]
#define k yy->_val[-3]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_1_dictLiteral\n"));
  {
#line 457
   e = dictWith(slice(k.as<string>()), e); ;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef v
#undef e
#undef k
}
YY_ACTION(void) yy_3_arrayLiteral(yycontext *yy, char *yytext, int yyleng)
{
#define e2 yy->_val[-1]
#define e yy->_val[-2]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_3_arrayLiteral\n"));
  {
#line 452
   y_ = e.isNull() ? Any(op("[]")) : e;;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef e2
#undef e
}
YY_ACTION(void) yy_2_arrayLiteral(yycontext *yy, char *yytext, int yyleng)
{
#define e2 yy->_val[-1]
#define e yy->_val[-2]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_2_arrayLiteral\n"));
  {
#line 450
   appendAny(e, e2); ;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef e2
#undef e
}
YY_ACTION(void) yy_1_arrayLiteral(yycontext *yy, char *yytext, int yyleng)
{
#define e2 yy->_val[-1]
#define e yy->_val[-2]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_1_arrayLiteral\n"));
  {
#line 449
   e = op("[]", e); ;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef e2
#undef e
}
YY_ACTION(void) yy_2_IDENTIFIER(yycontext *yy, char *yytext, int yyleng)
{
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_2_IDENTIFIER\n"));
  {
#line 391
   y_ = unquote(yytext, '`');;
  }
#undef yythunkpos
#undef yypos
#undef yy
}
YY_ACTION(void) yy_1_IDENTIFIER(yycontext *yy, char *yytext, int yyleng)
{
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_1_IDENTIFIER\n"));
  {
#line 390
   y_ = string(yytext);;
  }
#undef yythunkpos
#undef yypos
#undef yy
}
YY_ACTION(void) yy_4_parenExprs(yycontext *yy, char *yytext, int yyleng)
{
#define e2 yy->_val[-1]
#define e yy->_val[-2]
#define f yy->_val[-3]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_4_parenExprs\n"));
  {
#line 381
   y_ = f;;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef e2
#undef e
#undef f
}
YY_ACTION(void) yy_3_parenExprs(yycontext *yy, char *yytext, int yyleng)
{
#define e2 yy->_val[-1]
#define e yy->_val[-2]
#define f yy->_val[-3]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_3_parenExprs\n"));
  {
#line 380
   appendAny(f, e2);;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef e2
#undef e
#undef f
}
YY_ACTION(void) yy_2_parenExprs(yycontext *yy, char *yytext, int yyleng)
{
#define e2 yy->_val[-1]
#define e yy->_val[-2]
#define f yy->_val[-3]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_2_parenExprs\n"));
  {
#line 379
   appendAny(f, e);;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef e2
#undef e
#undef f
}
YY_ACTION(void) yy_1_parenExprs(yycontext *yy, char *yytext, int yyleng)
{
#define e2 yy->_val[-1]
#define e yy->_val[-2]
#define f yy->_val[-3]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_1_parenExprs\n"));
  {
#line 378
   f = MutableArray::newArray();;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef e2
#undef e
#undef f
}
YY_ACTION(void) yy_16_function(yycontext *yy, char *yytext, int yyleng)
{
#define e yy->_val[-1]
#define f yy->_val[-2]
#define tbl yy->_val[-3]
#define t yy->_val[-4]
#define ind yy->_val[-5]
#define c yy->_val[-6]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_16_function\n"));
  {
#line 372
   y_ = insertAny(e, 0, f.as<string>() + "()");;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef e
#undef f
#undef tbl
#undef t
#undef ind
#undef c
}
YY_ACTION(void) yy_15_function(yycontext *yy, char *yytext, int yyleng)
{
#define e yy->_val[-1]
#define f yy->_val[-2]
#define tbl yy->_val[-3]
#define t yy->_val[-4]
#define ind yy->_val[-5]
#define c yy->_val[-6]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_15_function\n"));
  {
#line 371
   y_ = f;;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef e
#undef f
#undef tbl
#undef t
#undef ind
#undef c
}
YY_ACTION(void) yy_14_function(yycontext *yy, char *yytext, int yyleng)
{
#define e yy->_val[-1]
#define f yy->_val[-2]
#define tbl yy->_val[-3]
#define t yy->_val[-4]
#define ind yy->_val[-5]
#define c yy->_val[-6]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_14_function\n"));
  {
#line 370
   appendAny(f, ind.as<string>());;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef e
#undef f
#undef tbl
#undef t
#undef ind
#undef c
}
YY_ACTION(void) yy_13_function(yycontext *yy, char *yytext, int yyleng)
{
#define e yy->_val[-1]
#define f yy->_val[-2]
#define tbl yy->_val[-3]
#define t yy->_val[-4]
#define ind yy->_val[-5]
#define c yy->_val[-6]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_13_function\n"));
  {
#line 369
   f = op("RANK()");;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef e
#undef f
#undef tbl
#undef t
#undef ind
#undef c
}
YY_ACTION(void) yy_12_function(yycontext *yy, char *yytext, int yyleng)
{
#define e yy->_val[-1]
#define f yy->_val[-2]
#define tbl yy->_val[-3]
#define t yy->_val[-4]
#define ind yy->_val[-5]
#define c yy->_val[-6]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_12_function\n"));
  {
#line 368
   y_ = f;;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef e
#undef f
#undef tbl
#undef t
#undef ind
#undef c
}
YY_ACTION(void) yy_11_function(yycontext *yy, char *yytext, int yyleng)
{
#define e yy->_val[-1]
#define f yy->_val[-2]
#define tbl yy->_val[-3]
#define t yy->_val[-4]
#define ind yy->_val[-5]
#define c yy->_val[-6]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_11_function\n"));
  {
#line 366
   appendAny(f, t);;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef e
#undef f
#undef tbl
#undef t
#undef ind
#undef c
}
YY_ACTION(void) yy_10_function(yycontext *yy, char *yytext, int yyleng)
{
#define e yy->_val[-1]
#define f yy->_val[-2]
#define tbl yy->_val[-3]
#define t yy->_val[-4]
#define ind yy->_val[-5]
#define c yy->_val[-6]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_10_function\n"));
  {
#line 365
   appendAny(f, t);;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef e
#undef f
#undef tbl
#undef t
#undef ind
#undef c
}
YY_ACTION(void) yy_9_function(yycontext *yy, char *yytext, int yyleng)
{
#define e yy->_val[-1]
#define f yy->_val[-2]
#define tbl yy->_val[-3]
#define t yy->_val[-4]
#define ind yy->_val[-5]
#define c yy->_val[-6]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_9_function\n"));
  {
#line 364
   appendAny(f, tbl.as<string>());;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef e
#undef f
#undef tbl
#undef t
#undef ind
#undef c
}
YY_ACTION(void) yy_8_function(yycontext *yy, char *yytext, int yyleng)
{
#define e yy->_val[-1]
#define f yy->_val[-2]
#define tbl yy->_val[-3]
#define t yy->_val[-4]
#define ind yy->_val[-5]
#define c yy->_val[-6]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_8_function\n"));
  {
#line 363
   f = op("PREDICTION()");;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef e
#undef f
#undef tbl
#undef t
#undef ind
#undef c
}
YY_ACTION(void) yy_7_function(yycontext *yy, char *yytext, int yyleng)
{
#define e yy->_val[-1]
#define f yy->_val[-2]
#define tbl yy->_val[-3]
#define t yy->_val[-4]
#define ind yy->_val[-5]
#define c yy->_val[-6]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_7_function\n"));
  {
#line 362
   y_ = f;;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef e
#undef f
#undef tbl
#undef t
#undef ind
#undef c
}
YY_ACTION(void) yy_6_function(yycontext *yy, char *yytext, int yyleng)
{
#define e yy->_val[-1]
#define f yy->_val[-2]
#define tbl yy->_val[-3]
#define t yy->_val[-4]
#define ind yy->_val[-5]
#define c yy->_val[-6]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_6_function\n"));
  {
#line 361
   appendAny(f, t);;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef e
#undef f
#undef tbl
#undef t
#undef ind
#undef c
}
YY_ACTION(void) yy_5_function(yycontext *yy, char *yytext, int yyleng)
{
#define e yy->_val[-1]
#define f yy->_val[-2]
#define tbl yy->_val[-3]
#define t yy->_val[-4]
#define ind yy->_val[-5]
#define c yy->_val[-6]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_5_function\n"));
  {
#line 360
   appendAny(f, ind.as<string>());;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef e
#undef f
#undef tbl
#undef t
#undef ind
#undef c
}
YY_ACTION(void) yy_4_function(yycontext *yy, char *yytext, int yyleng)
{
#define e yy->_val[-1]
#define f yy->_val[-2]
#define tbl yy->_val[-3]
#define t yy->_val[-4]
#define ind yy->_val[-5]
#define c yy->_val[-6]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_4_function\n"));
  {
#line 359
   f = op("MATCH()");;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef e
#undef f
#undef tbl
#undef t
#undef ind
#undef c
}
YY_ACTION(void) yy_3_function(yycontext *yy, char *yytext, int yyleng)
{
#define e yy->_val[-1]
#define f yy->_val[-2]
#define tbl yy->_val[-3]
#define t yy->_val[-4]
#define ind yy->_val[-5]
#define c yy->_val[-6]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_3_function\n"));
  {
#line 358
   y_ = f;;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef e
#undef f
#undef tbl
#undef t
#undef ind
#undef c
}
YY_ACTION(void) yy_2_function(yycontext *yy, char *yytext, int yyleng)
{
#define e yy->_val[-1]
#define f yy->_val[-2]
#define tbl yy->_val[-3]
#define t yy->_val[-4]
#define ind yy->_val[-5]
#define c yy->_val[-6]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_2_function\n"));
  {
#line 357
   appendAny(f, c.as<string>());;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef e
#undef f
#undef tbl
#undef t
#undef ind
#undef c
}
YY_ACTION(void) yy_1_function(yycontext *yy, char *yytext, int yyleng)
{
#define e yy->_val[-1]
#define f yy->_val[-2]
#define tbl yy->_val[-3]
#define t yy->_val[-4]
#define ind yy->_val[-5]
#define c yy->_val[-6]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_1_function\n"));
  {
#line 356
   f = op("meta()");;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef e
#undef f
#undef tbl
#undef t
#undef ind
#undef c
}
YY_ACTION(void) yy_2_indexTable(yycontext *yy, char *yytext, int yyleng)
{
#define i yy->_val[-1]
#define a yy->_val[-2]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_2_indexTable\n"));
  {
#line 348
   string c = quoteIdentity(a.as<string>());
                                          y_ = c.empty() ? i.as<string>() : c + "." + i.as<string>();
                                        ;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef i
#undef a
}
YY_ACTION(void) yy_1_indexTable(yycontext *yy, char *yytext, int yyleng)
{
#define i yy->_val[-1]
#define a yy->_val[-2]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_1_indexTable\n"));
  {
#line 346
   a = string(""); ;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef i
#undef a
}
YY_ACTION(void) yy_4_propertyPath(yycontext *yy, char *yytext, int yyleng)
{
#define i yy->_val[-1]
#define p2 yy->_val[-2]
#define p yy->_val[-3]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_4_propertyPath\n"));
  {
#line 341
   y_ = p;;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef i
#undef p2
#undef p
}
YY_ACTION(void) yy_3_propertyPath(yycontext *yy, char *yytext, int yyleng)
{
#define i yy->_val[-1]
#define p2 yy->_val[-2]
#define p yy->_val[-3]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_3_propertyPath\n"));
  {
#line 339
   p = concatIndex(p, i);;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef i
#undef p2
#undef p
}
YY_ACTION(void) yy_2_propertyPath(yycontext *yy, char *yytext, int yyleng)
{
#define i yy->_val[-1]
#define p2 yy->_val[-2]
#define p yy->_val[-3]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_2_propertyPath\n"));
  {
#line 337
   p = concatProperty(p, p2);;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef i
#undef p2
#undef p
}
YY_ACTION(void) yy_1_propertyPath(yycontext *yy, char *yytext, int yyleng)
{
#define i yy->_val[-1]
#define p2 yy->_val[-2]
#define p yy->_val[-3]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_1_propertyPath\n"));
  {
#line 336
   p = quoteProperty(p); ;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef i
#undef p2
#undef p
}
YY_ACTION(void) yy_3_property(yycontext *yy, char *yytext, int yyleng)
{
#define p yy->_val[-1]
#define a yy->_val[-2]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_3_property\n"));
  {
#line 333
   y_ = op(p);;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef p
#undef a
}
YY_ACTION(void) yy_2_property(yycontext *yy, char *yytext, int yyleng)
{
#define p yy->_val[-1]
#define a yy->_val[-2]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_2_property\n"));
  {
#line 332
   y_ = op("." + quoteIdentity(a.as<string>()) + ".");;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef p
#undef a
}
YY_ACTION(void) yy_1_property(yycontext *yy, char *yytext, int yyleng)
{
#define p yy->_val[-1]
#define a yy->_val[-2]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_1_property\n"));
  {
#line 331
   y_ = op(".");;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef p
#undef a
}
YY_ACTION(void) yy_1_OP_PREFIX(yycontext *yy, char *yytext, int yyleng)
{
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_1_OP_PREFIX\n"));
  {
#line 324
   y_ = trim(yytext);;
  }
#undef yythunkpos
#undef yypos
#undef yy
}
YY_ACTION(void) yy_3_baseExpr_(yycontext *yy, char *yytext, int yyleng)
{
#define s yy->_val[-1]
#define r yy->_val[-2]
#define o yy->_val[-3]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_3_baseExpr_\n"));
  {
#line 317
   y_ = op(string("$") + yytext); ;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef s
#undef r
#undef o
}
YY_ACTION(void) yy_2_baseExpr_(yycontext *yy, char *yytext, int yyleng)
{
#define s yy->_val[-1]
#define r yy->_val[-2]
#define o yy->_val[-3]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_2_baseExpr_\n"));
  {
#line 314
   y_ = op("EXISTS", s); ;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef s
#undef r
#undef o
}
YY_ACTION(void) yy_1_baseExpr_(yycontext *yy, char *yytext, int yyleng)
{
#define s yy->_val[-1]
#define r yy->_val[-2]
#define o yy->_val[-3]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_1_baseExpr_\n"));
  {
#line 313
   y_ = unaryOp(o, r);;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef s
#undef r
#undef o
}
YY_ACTION(void) yy_2_collation(yycontext *yy, char *yytext, int yyleng)
{
#define l yy->_val[-1]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_2_collation\n"));
  {
#line 307
   y_ = string(yytext); ;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef l
}
YY_ACTION(void) yy_1_collation(yycontext *yy, char *yytext, int yyleng)
{
#define l yy->_val[-1]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_1_collation\n"));
  {
#line 306
   y_ = l; ;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef l
}
YY_ACTION(void) yy_3_collationLang(yycontext *yy, char *yytext, int yyleng)
{
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_3_collationLang\n"));
  {
#line 302
   y_ = y_.as<string>() + string(yytext); ;
  }
#undef yythunkpos
#undef yypos
#undef yy
}
YY_ACTION(void) yy_2_collationLang(yycontext *yy, char *yytext, int yyleng)
{
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_2_collationLang\n"));
  {
#line 301
   y_ = string("UNICODE"); ;
  }
#undef yythunkpos
#undef yypos
#undef yy
}
YY_ACTION(void) yy_1_collationLang(yycontext *yy, char *yytext, int yyleng)
{
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_1_collationLang\n"));
  {
#line 299
   y_ = string(yytext); ;
  }
#undef yythunkpos
#undef yypos
#undef yy
}
YY_ACTION(void) yy_4_collateSuffix(yycontext *yy, char *yytext, int yyleng)
{
#define c yy->_val[-1]
#define co yy->_val[-2]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_4_collateSuffix\n"));
  {
#line 296
   y_ = co; ;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef c
#undef co
}
YY_ACTION(void) yy_3_collateSuffix(yycontext *yy, char *yytext, int yyleng)
{
#define c yy->_val[-1]
#define co yy->_val[-2]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_3_collateSuffix\n"));
  {
#line 290
   if (co.isNull()) {
                                            co = arrayWith(c);
                                          } else {
                                            appendAny(co, c);
                                          } ;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef c
#undef co
}
YY_ACTION(void) yy_2_collateSuffix(yycontext *yy, char *yytext, int yyleng)
{
#define c yy->_val[-1]
#define co yy->_val[-2]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_2_collateSuffix\n"));
  {
#line 288
   co = arrayWith(c); ;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef c
#undef co
}
YY_ACTION(void) yy_1_collateSuffix(yycontext *yy, char *yytext, int yyleng)
{
#define c yy->_val[-1]
#define co yy->_val[-2]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_1_collateSuffix\n"));
  {
#line 286
   co = Any(); ;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef c
#undef co
}
YY_ACTION(void) yy_2_expr0(yycontext *yy, char *yytext, int yyleng)
{
#define p yy->_val[-1]
#define x yy->_val[-2]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_2_expr0\n"));
  {
#line 283
   y_ = x; ;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef p
#undef x
}
YY_ACTION(void) yy_1_expr0(yycontext *yy, char *yytext, int yyleng)
{
#define p yy->_val[-1]
#define x yy->_val[-2]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_1_expr0\n"));
  {
#line 282
   y_ = op("_.", x, p);;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef p
#undef x
}
YY_ACTION(void) yy_1_selectExpr(yycontext *yy, char *yytext, int yyleng)
{
#define s yy->_val[-1]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_1_selectExpr\n"));
  {
#line 275
   y_ = op("SELECT", s); ;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef s
}
YY_ACTION(void) yy_2_IN_OR_NOT(yycontext *yy, char *yytext, int yyleng)
{
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_2_IN_OR_NOT\n"));
  {
#line 272
   y_ = string("IN");;
  }
#undef yythunkpos
#undef yypos
#undef yy
}
YY_ACTION(void) yy_1_IN_OR_NOT(yycontext *yy, char *yytext, int yyleng)
{
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_1_IN_OR_NOT\n"));
  {
#line 271
   y_ = string("NOT IN");;
  }
#undef yythunkpos
#undef yypos
#undef yy
}
YY_ACTION(void) yy_2_inExpression(yycontext *yy, char *yytext, int yyleng)
{
#define a yy->_val[-1]
#define p yy->_val[-2]
#define s yy->_val[-3]
#define i yy->_val[-4]
#define x yy->_val[-5]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_2_inExpression\n"));
  {
#line 267
   y_ = op(i, x, a); ;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef a
#undef p
#undef s
#undef i
#undef x
}
YY_ACTION(void) yy_1_inExpression(yycontext *yy, char *yytext, int yyleng)
{
#define a yy->_val[-1]
#define p yy->_val[-2]
#define s yy->_val[-3]
#define i yy->_val[-4]
#define x yy->_val[-5]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_1_inExpression\n"));
  {
#line 266
   y_ = op(i, x, insertAny(p, 0, string("[]"))); ;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef a
#undef p
#undef s
#undef i
#undef x
}
YY_ACTION(void) yy_1_OP_PREC_1(yycontext *yy, char *yytext, int yyleng)
{
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_1_OP_PREC_1\n"));
  {
#line 257
   y_ = trim(yytext);;
  }
#undef yythunkpos
#undef yypos
#undef yy
}
YY_ACTION(void) yy_1_OP_PREC_2(yycontext *yy, char *yytext, int yyleng)
{
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_1_OP_PREC_2\n"));
  {
#line 256
   y_ = trim(yytext);;
  }
#undef yythunkpos
#undef yypos
#undef yy
}
YY_ACTION(void) yy_1_OP_PREC_3(yycontext *yy, char *yytext, int yyleng)
{
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_1_OP_PREC_3\n"));
  {
#line 255
   y_ = trim(yytext);;
  }
#undef yythunkpos
#undef yypos
#undef yy
}
YY_ACTION(void) yy_1_OP_PREC_4(yycontext *yy, char *yytext, int yyleng)
{
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_1_OP_PREC_4\n"));
  {
#line 254
   y_ = trim(yytext);;
  }
#undef yythunkpos
#undef yypos
#undef yy
}
YY_ACTION(void) yy_1_OP_PREC_5(yycontext *yy, char *yytext, int yyleng)
{
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_1_OP_PREC_5\n"));
  {
#line 253
   y_ = trim(yytext);;
  }
#undef yythunkpos
#undef yypos
#undef yy
}
YY_ACTION(void) yy_4_OP_PREC_6(yycontext *yy, char *yytext, int yyleng)
{
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_4_OP_PREC_6\n"));
  {
#line 252
   y_ = string("IS");;
  }
#undef yythunkpos
#undef yypos
#undef yy
}
YY_ACTION(void) yy_3_OP_PREC_6(yycontext *yy, char *yytext, int yyleng)
{
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_3_OP_PREC_6\n"));
  {
#line 251
   y_ = string("IS NOT");;
  }
#undef yythunkpos
#undef yypos
#undef yy
}
YY_ACTION(void) yy_2_OP_PREC_6(yycontext *yy, char *yytext, int yyleng)
{
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_2_OP_PREC_6\n"));
  {
#line 250
   y_ = string("!=");;
  }
#undef yythunkpos
#undef yypos
#undef yy
}
YY_ACTION(void) yy_1_OP_PREC_6(yycontext *yy, char *yytext, int yyleng)
{
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_1_OP_PREC_6\n"));
  {
#line 249
   y_ = string("=");;
  }
#undef yythunkpos
#undef yypos
#undef yy
}
YY_ACTION(void) yy_1_OP_PREC_7(yycontext *yy, char *yytext, int yyleng)
{
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_1_OP_PREC_7\n"));
  {
#line 248
   y_ = string("AND");;
  }
#undef yythunkpos
#undef yypos
#undef yy
}
YY_ACTION(void) yy_1_OP_PREC_8(yycontext *yy, char *yytext, int yyleng)
{
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_1_OP_PREC_8\n"));
  {
#line 247
   y_ = string("OR");;
  }
#undef yythunkpos
#undef yypos
#undef yy
}
YY_ACTION(void) yy_1_betweenExpression(yycontext *yy, char *yytext, int yyleng)
{
#define max yy->_val[-1]
#define min yy->_val[-2]
#define n yy->_val[-3]
#define x yy->_val[-4]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_1_betweenExpression\n"));
  {
#line 243
   auto b = op("BETWEEN", x, min, max);
                                          if (n.isNotNull())  b = op("NOT", b);
                                          y_ = b; ;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef max
#undef min
#undef n
#undef x
}
YY_ACTION(void) yy_1_likeExpression(yycontext *yy, char *yytext, int yyleng)
{
#define r yy->_val[-1]
#define n yy->_val[-2]
#define x yy->_val[-3]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_1_likeExpression\n"));
  {
#line 237
   auto b = binaryOp(x, "LIKE", r);
                                          if (n.isNotNull())  b = op("NOT", b);
                                          y_ = b; ;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef r
#undef n
#undef x
}
YY_ACTION(void) yy_2_expr1(yycontext *yy, char *yytext, int yyleng)
{
#define r yy->_val[-1]
#define op yy->_val[-2]
#define x yy->_val[-3]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_2_expr1\n"));
  {
#line 234
   y_ = x;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef r
#undef op
#undef x
}
YY_ACTION(void) yy_1_expr1(yycontext *yy, char *yytext, int yyleng)
{
#define r yy->_val[-1]
#define op yy->_val[-2]
#define x yy->_val[-3]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_1_expr1\n"));
  {
#line 233
   x = binaryOp(x, op, r);;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef r
#undef op
#undef x
}
YY_ACTION(void) yy_2_expr2(yycontext *yy, char *yytext, int yyleng)
{
#define r yy->_val[-1]
#define op yy->_val[-2]
#define x yy->_val[-3]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_2_expr2\n"));
  {
#line 231
   y_ = x;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef r
#undef op
#undef x
}
YY_ACTION(void) yy_1_expr2(yycontext *yy, char *yytext, int yyleng)
{
#define r yy->_val[-1]
#define op yy->_val[-2]
#define x yy->_val[-3]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_1_expr2\n"));
  {
#line 230
   x = binaryOp(x, op, r); ;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef r
#undef op
#undef x
}
YY_ACTION(void) yy_2_expr3(yycontext *yy, char *yytext, int yyleng)
{
#define r yy->_val[-1]
#define op yy->_val[-2]
#define x yy->_val[-3]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_2_expr3\n"));
  {
#line 228
   y_ = x;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef r
#undef op
#undef x
}
YY_ACTION(void) yy_1_expr3(yycontext *yy, char *yytext, int yyleng)
{
#define r yy->_val[-1]
#define op yy->_val[-2]
#define x yy->_val[-3]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_1_expr3\n"));
  {
#line 227
   x = binaryOp(x, op, r);;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef r
#undef op
#undef x
}
YY_ACTION(void) yy_2_expr4(yycontext *yy, char *yytext, int yyleng)
{
#define r yy->_val[-1]
#define op yy->_val[-2]
#define x yy->_val[-3]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_2_expr4\n"));
  {
#line 225
   y_ = x;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef r
#undef op
#undef x
}
YY_ACTION(void) yy_1_expr4(yycontext *yy, char *yytext, int yyleng)
{
#define r yy->_val[-1]
#define op yy->_val[-2]
#define x yy->_val[-3]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_1_expr4\n"));
  {
#line 224
   x = binaryOp(x, op, r);;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef r
#undef op
#undef x
}
YY_ACTION(void) yy_2_expr5(yycontext *yy, char *yytext, int yyleng)
{
#define r yy->_val[-1]
#define op yy->_val[-2]
#define x yy->_val[-3]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_2_expr5\n"));
  {
#line 222
   y_ = x;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef r
#undef op
#undef x
}
YY_ACTION(void) yy_1_expr5(yycontext *yy, char *yytext, int yyleng)
{
#define r yy->_val[-1]
#define op yy->_val[-2]
#define x yy->_val[-3]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_1_expr5\n"));
  {
#line 221
   x = binaryOp(x, op, r);;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef r
#undef op
#undef x
}
YY_ACTION(void) yy_3_expr6(yycontext *yy, char *yytext, int yyleng)
{
#define r yy->_val[-1]
#define o yy->_val[-2]
#define x yy->_val[-3]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_3_expr6\n"));
  {
#line 219
   y_ = x;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef r
#undef o
#undef x
}
YY_ACTION(void) yy_2_expr6(yycontext *yy, char *yytext, int yyleng)
{
#define r yy->_val[-1]
#define o yy->_val[-2]
#define x yy->_val[-3]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_2_expr6\n"));
  {
#line 218
   x = binaryOp(x, o, r);;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef r
#undef o
#undef x
}
YY_ACTION(void) yy_1_expr6(yycontext *yy, char *yytext, int yyleng)
{
#define r yy->_val[-1]
#define o yy->_val[-2]
#define x yy->_val[-3]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_1_expr6\n"));
  {
#line 214
   y_ = op(o, x); ;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef r
#undef o
#undef x
}
YY_ACTION(void) yy_2_expr7(yycontext *yy, char *yytext, int yyleng)
{
#define r yy->_val[-1]
#define op yy->_val[-2]
#define x yy->_val[-3]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_2_expr7\n"));
  {
#line 212
   y_ = x;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef r
#undef op
#undef x
}
YY_ACTION(void) yy_1_expr7(yycontext *yy, char *yytext, int yyleng)
{
#define r yy->_val[-1]
#define op yy->_val[-2]
#define x yy->_val[-3]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_1_expr7\n"));
  {
#line 211
   x = binaryOp(x, op, r);;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef r
#undef op
#undef x
}
YY_ACTION(void) yy_2_expr8(yycontext *yy, char *yytext, int yyleng)
{
#define r yy->_val[-1]
#define op yy->_val[-2]
#define x yy->_val[-3]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_2_expr8\n"));
  {
#line 209
   y_ = x;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef r
#undef op
#undef x
}
YY_ACTION(void) yy_1_expr8(yycontext *yy, char *yytext, int yyleng)
{
#define r yy->_val[-1]
#define op yy->_val[-2]
#define x yy->_val[-3]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_1_expr8\n"));
  {
#line 208
   x = binaryOp(x, op, r);;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef r
#undef op
#undef x
}
YY_ACTION(void) yy_2_expr9(yycontext *yy, char *yytext, int yyleng)
{
#define co yy->_val[-1]
#define x yy->_val[-2]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_2_expr9\n"));
  {
#line 205
   y_ = x; ;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef co
#undef x
}
YY_ACTION(void) yy_1_expr9(yycontext *yy, char *yytext, int yyleng)
{
#define co yy->_val[-1]
#define x yy->_val[-2]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_1_expr9\n"));
  {
#line 194
   MutableArray coArray = co;
                                          bool did_collateOp = false;
                                          for (auto iter = coArray.begin(); iter != coArray.end(); ++iter) {
                                            if (did_collateOp) {
                                               extendCollate(x, iter->asstring());
                                            } else {
                                               x = collateOp(x, iter->asstring());
                                               did_collateOp = true;
                                            }
                                          }
                                ;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef co
#undef x
}
YY_ACTION(void) yy_7_POST_OP_PREC_6(yycontext *yy, char *yytext, int yyleng)
{
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_7_POST_OP_PREC_6\n"));
  {
#line 190
   y_ = string("IS NOT VALUED");;
  }
#undef yythunkpos
#undef yypos
#undef yy
}
YY_ACTION(void) yy_6_POST_OP_PREC_6(yycontext *yy, char *yytext, int yyleng)
{
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_6_POST_OP_PREC_6\n"));
  {
#line 189
   y_ = string("IS NOT MISSING");;
  }
#undef yythunkpos
#undef yypos
#undef yy
}
YY_ACTION(void) yy_5_POST_OP_PREC_6(yycontext *yy, char *yytext, int yyleng)
{
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_5_POST_OP_PREC_6\n"));
  {
#line 188
   y_ = string("IS NOT NULL");;
  }
#undef yythunkpos
#undef yypos
#undef yy
}
YY_ACTION(void) yy_4_POST_OP_PREC_6(yycontext *yy, char *yytext, int yyleng)
{
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_4_POST_OP_PREC_6\n"));
  {
#line 187
   y_ = string("IS VALUED");;
  }
#undef yythunkpos
#undef yypos
#undef yy
}
YY_ACTION(void) yy_3_POST_OP_PREC_6(yycontext *yy, char *yytext, int yyleng)
{
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_3_POST_OP_PREC_6\n"));
  {
#line 186
   y_ = string("IS MISSING");;
  }
#undef yythunkpos
#undef yypos
#undef yy
}
YY_ACTION(void) yy_2_POST_OP_PREC_6(yycontext *yy, char *yytext, int yyleng)
{
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_2_POST_OP_PREC_6\n"));
  {
#line 185
   y_ = string("IS NULL");;
  }
#undef yythunkpos
#undef yypos
#undef yy
}
YY_ACTION(void) yy_1_POST_OP_PREC_6(yycontext *yy, char *yytext, int yyleng)
{
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_1_POST_OP_PREC_6\n"));
  {
#line 184
   y_ = string("NOT NULL");;
  }
#undef yythunkpos
#undef yypos
#undef yy
}
YY_ACTION(void) yy_3_anyEvery(yycontext *yy, char *yytext, int yyleng)
{
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_3_anyEvery\n"));
  {
#line 169
   y_ = string("EVERY");;
  }
#undef yythunkpos
#undef yypos
#undef yy
}
YY_ACTION(void) yy_2_anyEvery(yycontext *yy, char *yytext, int yyleng)
{
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_2_anyEvery\n"));
  {
#line 168
   y_ = string("ANY");;
  }
#undef yythunkpos
#undef yypos
#undef yy
}
YY_ACTION(void) yy_1_anyEvery(yycontext *yy, char *yytext, int yyleng)
{
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_1_anyEvery\n"));
  {
#line 167
   y_ = string("ANY AND EVERY");;
  }
#undef yythunkpos
#undef yypos
#undef yy
}
YY_ACTION(void) yy_1_anyEveryExpression(yycontext *yy, char *yytext, int yyleng)
{
#define s yy->_val[-1]
#define e yy->_val[-2]
#define v yy->_val[-3]
#define a yy->_val[-4]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_1_anyEveryExpression\n"));
  {
#line 159
   if (s.is<MutableArray>())
                                            substituteVariable(v, s);
                                          auto oper = op(a);
                                          appendAny(oper, v);
                                          appendAny(oper, e);
                                          appendAny(oper, s);
                                          y_ = oper; ;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef s
#undef e
#undef v
#undef a
}
YY_ACTION(void) yy_4_caseExpression(yycontext *yy, char *yytext, int yyleng)
{
#define elsex yy->_val[-1]
#define then yy->_val[-2]
#define when yy->_val[-3]
#define val yy->_val[-4]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_4_caseExpression\n"));
  {
#line 154
    y_ = val; ;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef elsex
#undef then
#undef when
#undef val
}
YY_ACTION(void) yy_3_caseExpression(yycontext *yy, char *yytext, int yyleng)
{
#define elsex yy->_val[-1]
#define then yy->_val[-2]
#define when yy->_val[-3]
#define val yy->_val[-4]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_3_caseExpression\n"));
  {
#line 153
   appendAny(val, elsex);;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef elsex
#undef then
#undef when
#undef val
}
YY_ACTION(void) yy_2_caseExpression(yycontext *yy, char *yytext, int yyleng)
{
#define elsex yy->_val[-1]
#define then yy->_val[-2]
#define when yy->_val[-3]
#define val yy->_val[-4]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_2_caseExpression\n"));
  {
#line 149
   appendAny(val, when);
                                          appendAny(val, then);
                                        ;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef elsex
#undef then
#undef when
#undef val
}
YY_ACTION(void) yy_1_caseExpression(yycontext *yy, char *yytext, int yyleng)
{
#define elsex yy->_val[-1]
#define then yy->_val[-2]
#define when yy->_val[-3]
#define val yy->_val[-4]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_1_caseExpression\n"));
  {
#line 147
   val = op("CASE", (val.isNull() ? Any(nullValue) : val));;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef elsex
#undef then
#undef when
#undef val
}
YY_ACTION(void) yy_1_expression(yycontext *yy, char *yytext, int yyleng)
{
#define x yy->_val[-1]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_1_expression\n"));
  {
#line 142
   y_ = (x) ;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef x
}
YY_ACTION(void) yy_1_order(yycontext *yy, char *yytext, int yyleng)
{
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_1_order\n"));
  {
#line 131
   y_ = trim(yytext);;
  }
#undef yythunkpos
#undef yypos
#undef yy
}
YY_ACTION(void) yy_2_ordering(yycontext *yy, char *yytext, int yyleng)
{
#define o yy->_val[-1]
#define x yy->_val[-2]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_2_ordering\n"));
  {
#line 128
   y_ = x; ;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef o
#undef x
}
YY_ACTION(void) yy_1_ordering(yycontext *yy, char *yytext, int yyleng)
{
#define o yy->_val[-1]
#define x yy->_val[-2]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_1_ordering\n"));
  {
#line 127
   x = op(o, x);;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef o
#undef x
}
YY_ACTION(void) yy_3_orderBy(yycontext *yy, char *yytext, int yyleng)
{
#define o2 yy->_val[-1]
#define o yy->_val[-2]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_3_orderBy\n"));
  {
#line 123
   y_ = o; ;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef o2
#undef o
}
YY_ACTION(void) yy_2_orderBy(yycontext *yy, char *yytext, int yyleng)
{
#define o2 yy->_val[-1]
#define o yy->_val[-2]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_2_orderBy\n"));
  {
#line 122
   appendAny(o, o2); ;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef o2
#undef o
}
YY_ACTION(void) yy_1_orderBy(yycontext *yy, char *yytext, int yyleng)
{
#define o2 yy->_val[-1]
#define o yy->_val[-2]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_1_orderBy\n"));
  {
#line 121
   o = arrayWith(o); ;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef o2
#undef o
}
YY_ACTION(void) yy_3_groupBy(yycontext *yy, char *yytext, int yyleng)
{
#define x2 yy->_val[-1]
#define x yy->_val[-2]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_3_groupBy\n"));
  {
#line 115
   y_ = x;;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef x2
#undef x
}
YY_ACTION(void) yy_2_groupBy(yycontext *yy, char *yytext, int yyleng)
{
#define x2 yy->_val[-1]
#define x yy->_val[-2]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_2_groupBy\n"));
  {
#line 114
   appendAny(x, x2);;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef x2
#undef x
}
YY_ACTION(void) yy_1_groupBy(yycontext *yy, char *yytext, int yyleng)
{
#define x2 yy->_val[-1]
#define x yy->_val[-2]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_1_groupBy\n"));
  {
#line 113
   x = arrayWith(x);;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef x2
#undef x
}
YY_ACTION(void) yy_1_unnest(yycontext *yy, char *yytext, int yyleng)
{
#define ca yy->_val[-1]
#define p yy->_val[-2]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_1_unnest\n"));
  {
#line 105
  
                                          MutableDict dict = MutableDict::newDict();
                                          setAny(dict, "UNNEST", op(p));
                                          if (!ca.isNull()) setAny(dict, "AS", ca);
                                          y_ = dict;
                                        ;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef ca
#undef p
}
YY_ACTION(void) yy_1_joinOperator(yycontext *yy, char *yytext, int yyleng)
{
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_1_joinOperator\n"));
  {
#line 100
   string join = trim(yytext);
                                          y_ = join.empty() ? string("INNER") : join;;
  }
#undef yythunkpos
#undef yypos
#undef yy
}
YY_ACTION(void) yy_3_join(yycontext *yy, char *yytext, int yyleng)
{
#define c yy->_val[-1]
#define s yy->_val[-2]
#define o yy->_val[-3]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_3_join\n"));
  {
#line 96
   y_ = s; ;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef c
#undef s
#undef o
}
YY_ACTION(void) yy_2_join(yycontext *yy, char *yytext, int yyleng)
{
#define c yy->_val[-1]
#define s yy->_val[-2]
#define o yy->_val[-3]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_2_join\n"));
  {
#line 95
   setAny(s, "ON"_sl, c); ;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef c
#undef s
#undef o
}
YY_ACTION(void) yy_1_join(yycontext *yy, char *yytext, int yyleng)
{
#define c yy->_val[-1]
#define s yy->_val[-2]
#define o yy->_val[-3]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_1_join\n"));
  {
#line 94
   setAny(s, "JOIN"_sl, o); ;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef c
#undef s
#undef o
}
YY_ACTION(void) yy_3_collectionName(yycontext *yy, char *yytext, int yyleng)
{
#define c2 yy->_val[-1]
#define c yy->_val[-2]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_3_collectionName\n"));
  {
#line 91
   y_ = c; ;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef c2
#undef c
}
YY_ACTION(void) yy_2_collectionName(yycontext *yy, char *yytext, int yyleng)
{
#define c2 yy->_val[-1]
#define c yy->_val[-2]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_2_collectionName\n"));
  {
#line 90
   appendAny(c, c2); ;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef c2
#undef c
}
YY_ACTION(void) yy_1_collectionName(yycontext *yy, char *yytext, int yyleng)
{
#define c2 yy->_val[-1]
#define c yy->_val[-2]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_1_collectionName\n"));
  {
#line 89
   c = arrayWith(c); ;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef c2
#undef c
}
YY_ACTION(void) yy_3_dataSource(yycontext *yy, char *yytext, int yyleng)
{
#define a yy->_val[-1]
#define n yy->_val[-2]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_3_dataSource\n"));
  {
#line 86
   y_ = n; ;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef a
#undef n
}
YY_ACTION(void) yy_2_dataSource(yycontext *yy, char *yytext, int yyleng)
{
#define a yy->_val[-1]
#define n yy->_val[-2]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_2_dataSource\n"));
  {
#line 85
   setAny(n, "AS"_sl, quoteIdentity(a)); ;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef a
#undef n
}
YY_ACTION(void) yy_1_dataSource(yycontext *yy, char *yytext, int yyleng)
{
#define a yy->_val[-1]
#define n yy->_val[-2]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_1_dataSource\n"));
  {
#line 84
   n = dictWithCollectionArray(n); ;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef a
#undef n
}
YY_ACTION(void) yy_4_from(yycontext *yy, char *yytext, int yyleng)
{
#define u yy->_val[-1]
#define j yy->_val[-2]
#define d yy->_val[-3]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_4_from\n"));
  {
#line 81
   y_ = d;;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef u
#undef j
#undef d
}
YY_ACTION(void) yy_3_from(yycontext *yy, char *yytext, int yyleng)
{
#define u yy->_val[-1]
#define j yy->_val[-2]
#define d yy->_val[-3]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_3_from\n"));
  {
#line 79
   appendAny(d, u);;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef u
#undef j
#undef d
}
YY_ACTION(void) yy_2_from(yycontext *yy, char *yytext, int yyleng)
{
#define u yy->_val[-1]
#define j yy->_val[-2]
#define d yy->_val[-3]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_2_from\n"));
  {
#line 78
   appendAny(d, j);;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef u
#undef j
#undef d
}
YY_ACTION(void) yy_1_from(yycontext *yy, char *yytext, int yyleng)
{
#define u yy->_val[-1]
#define j yy->_val[-2]
#define d yy->_val[-3]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_1_from\n"));
  {
#line 77
   d = arrayWith(d);;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef u
#undef j
#undef d
}
YY_ACTION(void) yy_1_selectResult(yycontext *yy, char *yytext, int yyleng)
{
#define ca yy->_val[-1]
#define x yy->_val[-2]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_1_selectResult\n"));
  {
#line 70
   assert(!x.isNull());
                                          if (ca.isNull())
                                            y_ = x;
                                          else
                                            y_ = op("AS", x, ca); ;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef ca
#undef x
}
YY_ACTION(void) yy_3_selectResults(yycontext *yy, char *yytext, int yyleng)
{
#define sr2 yy->_val[-1]
#define sr yy->_val[-2]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_3_selectResults\n"));
  {
#line 66
   y_ = sr; ;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef sr2
#undef sr
}
YY_ACTION(void) yy_2_selectResults(yycontext *yy, char *yytext, int yyleng)
{
#define sr2 yy->_val[-1]
#define sr yy->_val[-2]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_2_selectResults\n"));
  {
#line 65
   appendAny(sr, sr2);  ;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef sr2
#undef sr
}
YY_ACTION(void) yy_1_selectResults(yycontext *yy, char *yytext, int yyleng)
{
#define sr2 yy->_val[-1]
#define sr yy->_val[-2]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_1_selectResults\n"));
  {
#line 64
   sr = arrayWith(sr); ;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef sr2
#undef sr
}
YY_ACTION(void) yy_13_selectStatement(yycontext *yy, char *yytext, int yyleng)
{
#define off yy->_val[-1]
#define l yy->_val[-2]
#define o yy->_val[-3]
#define h yy->_val[-4]
#define g yy->_val[-5]
#define w yy->_val[-6]
#define f yy->_val[-7]
#define sr yy->_val[-8]
#define d yy->_val[-9]
#define select yy->_val[-10]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_13_selectStatement\n"));
  {
#line 61
   y_ = select; ;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef off
#undef l
#undef o
#undef h
#undef g
#undef w
#undef f
#undef sr
#undef d
#undef select
}
YY_ACTION(void) yy_12_selectStatement(yycontext *yy, char *yytext, int yyleng)
{
#define off yy->_val[-1]
#define l yy->_val[-2]
#define o yy->_val[-3]
#define h yy->_val[-4]
#define g yy->_val[-5]
#define w yy->_val[-6]
#define f yy->_val[-7]
#define sr yy->_val[-8]
#define d yy->_val[-9]
#define select yy->_val[-10]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_12_selectStatement\n"));
  {
#line 57
   setAny(select, "LIMIT"_sl, l); ;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef off
#undef l
#undef o
#undef h
#undef g
#undef w
#undef f
#undef sr
#undef d
#undef select
}
YY_ACTION(void) yy_11_selectStatement(yycontext *yy, char *yytext, int yyleng)
{
#define off yy->_val[-1]
#define l yy->_val[-2]
#define o yy->_val[-3]
#define h yy->_val[-4]
#define g yy->_val[-5]
#define w yy->_val[-6]
#define f yy->_val[-7]
#define sr yy->_val[-8]
#define d yy->_val[-9]
#define select yy->_val[-10]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_11_selectStatement\n"));
  {
#line 56
   setAny(select, "OFFSET"_sl, off); ;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef off
#undef l
#undef o
#undef h
#undef g
#undef w
#undef f
#undef sr
#undef d
#undef select
}
YY_ACTION(void) yy_10_selectStatement(yycontext *yy, char *yytext, int yyleng)
{
#define off yy->_val[-1]
#define l yy->_val[-2]
#define o yy->_val[-3]
#define h yy->_val[-4]
#define g yy->_val[-5]
#define w yy->_val[-6]
#define f yy->_val[-7]
#define sr yy->_val[-8]
#define d yy->_val[-9]
#define select yy->_val[-10]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_10_selectStatement\n"));
  {
#line 53
   setAny(select, "OFFSET"_sl, off); ;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef off
#undef l
#undef o
#undef h
#undef g
#undef w
#undef f
#undef sr
#undef d
#undef select
}
YY_ACTION(void) yy_9_selectStatement(yycontext *yy, char *yytext, int yyleng)
{
#define off yy->_val[-1]
#define l yy->_val[-2]
#define o yy->_val[-3]
#define h yy->_val[-4]
#define g yy->_val[-5]
#define w yy->_val[-6]
#define f yy->_val[-7]
#define sr yy->_val[-8]
#define d yy->_val[-9]
#define select yy->_val[-10]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_9_selectStatement\n"));
  {
#line 52
   setAny(select, "LIMIT"_sl, l); ;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef off
#undef l
#undef o
#undef h
#undef g
#undef w
#undef f
#undef sr
#undef d
#undef select
}
YY_ACTION(void) yy_8_selectStatement(yycontext *yy, char *yytext, int yyleng)
{
#define off yy->_val[-1]
#define l yy->_val[-2]
#define o yy->_val[-3]
#define h yy->_val[-4]
#define g yy->_val[-5]
#define w yy->_val[-6]
#define f yy->_val[-7]
#define sr yy->_val[-8]
#define d yy->_val[-9]
#define select yy->_val[-10]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_8_selectStatement\n"));
  {
#line 49
   setAny(select, "ORDER_BY"_sl, o); ;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef off
#undef l
#undef o
#undef h
#undef g
#undef w
#undef f
#undef sr
#undef d
#undef select
}
YY_ACTION(void) yy_7_selectStatement(yycontext *yy, char *yytext, int yyleng)
{
#define off yy->_val[-1]
#define l yy->_val[-2]
#define o yy->_val[-3]
#define h yy->_val[-4]
#define g yy->_val[-5]
#define w yy->_val[-6]
#define f yy->_val[-7]
#define sr yy->_val[-8]
#define d yy->_val[-9]
#define select yy->_val[-10]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_7_selectStatement\n"));
  {
#line 47
   setAny(select, "HAVING"_sl, h); ;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef off
#undef l
#undef o
#undef h
#undef g
#undef w
#undef f
#undef sr
#undef d
#undef select
}
YY_ACTION(void) yy_6_selectStatement(yycontext *yy, char *yytext, int yyleng)
{
#define off yy->_val[-1]
#define l yy->_val[-2]
#define o yy->_val[-3]
#define h yy->_val[-4]
#define g yy->_val[-5]
#define w yy->_val[-6]
#define f yy->_val[-7]
#define sr yy->_val[-8]
#define d yy->_val[-9]
#define select yy->_val[-10]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_6_selectStatement\n"));
  {
#line 46
   setAny(select, "GROUP_BY"_sl, g); ;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef off
#undef l
#undef o
#undef h
#undef g
#undef w
#undef f
#undef sr
#undef d
#undef select
}
YY_ACTION(void) yy_5_selectStatement(yycontext *yy, char *yytext, int yyleng)
{
#define off yy->_val[-1]
#define l yy->_val[-2]
#define o yy->_val[-3]
#define h yy->_val[-4]
#define g yy->_val[-5]
#define w yy->_val[-6]
#define f yy->_val[-7]
#define sr yy->_val[-8]
#define d yy->_val[-9]
#define select yy->_val[-10]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_5_selectStatement\n"));
  {
#line 44
   setAny(select, "WHERE"_sl, w); ;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef off
#undef l
#undef o
#undef h
#undef g
#undef w
#undef f
#undef sr
#undef d
#undef select
}
YY_ACTION(void) yy_4_selectStatement(yycontext *yy, char *yytext, int yyleng)
{
#define off yy->_val[-1]
#define l yy->_val[-2]
#define o yy->_val[-3]
#define h yy->_val[-4]
#define g yy->_val[-5]
#define w yy->_val[-6]
#define f yy->_val[-7]
#define sr yy->_val[-8]
#define d yy->_val[-9]
#define select yy->_val[-10]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_4_selectStatement\n"));
  {
#line 42
   setAny(select, "FROM"_sl, f); ;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef off
#undef l
#undef o
#undef h
#undef g
#undef w
#undef f
#undef sr
#undef d
#undef select
}
YY_ACTION(void) yy_3_selectStatement(yycontext *yy, char *yytext, int yyleng)
{
#define off yy->_val[-1]
#define l yy->_val[-2]
#define o yy->_val[-3]
#define h yy->_val[-4]
#define g yy->_val[-5]
#define w yy->_val[-6]
#define f yy->_val[-7]
#define sr yy->_val[-8]
#define d yy->_val[-9]
#define select yy->_val[-10]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_3_selectStatement\n"));
  {
#line 41
   setAny(select, "WHAT"_sl, sr); ;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef off
#undef l
#undef o
#undef h
#undef g
#undef w
#undef f
#undef sr
#undef d
#undef select
}
YY_ACTION(void) yy_2_selectStatement(yycontext *yy, char *yytext, int yyleng)
{
#define off yy->_val[-1]
#define l yy->_val[-2]
#define o yy->_val[-3]
#define h yy->_val[-4]
#define g yy->_val[-5]
#define w yy->_val[-6]
#define f yy->_val[-7]
#define sr yy->_val[-8]
#define d yy->_val[-9]
#define select yy->_val[-10]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_2_selectStatement\n"));
  {
#line 39
   setAny(select, "DISTINCT"_sl, true); ;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef off
#undef l
#undef o
#undef h
#undef g
#undef w
#undef f
#undef sr
#undef d
#undef select
}
YY_ACTION(void) yy_1_selectStatement(yycontext *yy, char *yytext, int yyleng)
{
#define off yy->_val[-1]
#define l yy->_val[-2]
#define o yy->_val[-3]
#define h yy->_val[-4]
#define g yy->_val[-5]
#define w yy->_val[-6]
#define f yy->_val[-7]
#define sr yy->_val[-8]
#define d yy->_val[-9]
#define select yy->_val[-10]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_1_selectStatement\n"));
  {
#line 38
   select = MutableDict::newDict(); ;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef off
#undef l
#undef o
#undef h
#undef g
#undef w
#undef f
#undef sr
#undef d
#undef select
}
YY_ACTION(void) yy_2_n1ql(yycontext *yy, char *yytext, int yyleng)
{
#define sr yy->_val[-1]
#define s yy->_val[-2]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_2_n1ql\n"));
  {
#line 29
   MutableDict dict = MutableDict::newDict();
                                        setAny(dict, "WHAT", sr);
                                        y_ = dict; ;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef sr
#undef s
}
YY_ACTION(void) yy_1_n1ql(yycontext *yy, char *yytext, int yyleng)
{
#define sr yy->_val[-1]
#define s yy->_val[-2]
#define y_ yy->_
#define yypos yy->_pos
#define yythunkpos yy->_thunkpos
  yyprintf((stderr, "do yy_1_n1ql\n"));
  {
#line 27
   y_ = s;;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef sr
#undef s
}

YY_RULE(int) yyrDIGIT(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;
  yyprintf((stderr, "%s\n", "DIGIT"));  if (!yymatchClass(yy, (unsigned char *)"\000\000\000\000\000\000\377\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000")) goto l1;
  yyprintf((stderr, "  ok   %s @ %s\n", "DIGIT", yy->_buf+yy->_pos));
  return 1;
  l1:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "DIGIT", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrBOOLEAN_LITERAL(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;
  yyprintf((stderr, "%s\n", "BOOLEAN_LITERAL"));
  {  int yypos3= yy->_pos, yythunkpos3= yy->_thunkpos;  if (!yyrTRUE(yy)) goto l4;  yyDo(yy, yy_1_BOOLEAN_LITERAL, yy->_begin, yy->_end);  goto l3;
  l4:;	  yy->_pos= yypos3; yy->_thunkpos= yythunkpos3;  if (!yyrFALSE(yy)) goto l2;  yyDo(yy, yy_2_BOOLEAN_LITERAL, yy->_begin, yy->_end);
  }
  l3:;	
  yyprintf((stderr, "  ok   %s @ %s\n", "BOOLEAN_LITERAL", yy->_buf+yy->_pos));
  return 1;
  l2:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "BOOLEAN_LITERAL", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrFLOAT_LITERAL(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;
  yyprintf((stderr, "%s\n", "FLOAT_LITERAL"));  yyText(yy, yy->_begin, yy->_end);  {
#define yytext yy->_text
#define yyleng yy->_textlen
if (!(YY_BEGIN)) goto l5;
#undef yytext
#undef yyleng
  }
  {  int yypos6= yy->_pos, yythunkpos6= yy->_thunkpos;  if (!yymatchChar(yy, '-')) goto l6;  goto l7;
  l6:;	  yy->_pos= yypos6; yy->_thunkpos= yythunkpos6;
  }
  l7:;	
  {  int yypos8= yy->_pos, yythunkpos8= yy->_thunkpos;  if (!yymatchChar(yy, '.')) goto l9;  if (!yyrDIGIT(yy)) goto l9;
  l10:;	
  {  int yypos11= yy->_pos, yythunkpos11= yy->_thunkpos;  if (!yyrDIGIT(yy)) goto l11;  goto l10;
  l11:;	  yy->_pos= yypos11; yy->_thunkpos= yythunkpos11;
  }  goto l8;
  l9:;	  yy->_pos= yypos8; yy->_thunkpos= yythunkpos8;
  {  int yypos12= yy->_pos, yythunkpos12= yy->_thunkpos;  if (!yyrDIGIT(yy)) goto l13;
  l14:;	
  {  int yypos15= yy->_pos, yythunkpos15= yy->_thunkpos;  if (!yyrDIGIT(yy)) goto l15;  goto l14;
  l15:;	  yy->_pos= yypos15; yy->_thunkpos= yythunkpos15;
  }  if (!yymatchChar(yy, '.')) goto l13;
  l16:;	
  {  int yypos17= yy->_pos, yythunkpos17= yy->_thunkpos;  if (!yyrDIGIT(yy)) goto l17;  goto l16;
  l17:;	  yy->_pos= yypos17; yy->_thunkpos= yythunkpos17;
  }
  {  int yypos18= yy->_pos, yythunkpos18= yy->_thunkpos;  if (!yymatchClass(yy, (unsigned char *)"\000\000\000\000\000\000\000\000\040\000\000\000\040\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000")) goto l18;
  {  int yypos20= yy->_pos, yythunkpos20= yy->_thunkpos;  if (!yymatchClass(yy, (unsigned char *)"\000\000\000\000\000\050\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000")) goto l20;  goto l21;
  l20:;	  yy->_pos= yypos20; yy->_thunkpos= yythunkpos20;
  }
  l21:;	  if (!yyrDIGIT(yy)) goto l18;
  l22:;	
  {  int yypos23= yy->_pos, yythunkpos23= yy->_thunkpos;  if (!yyrDIGIT(yy)) goto l23;  goto l22;
  l23:;	  yy->_pos= yypos23; yy->_thunkpos= yythunkpos23;
  }  goto l19;
  l18:;	  yy->_pos= yypos18; yy->_thunkpos= yythunkpos18;
  }
  l19:;	  goto l12;
  l13:;	  yy->_pos= yypos12; yy->_thunkpos= yythunkpos12;  if (!yyrDIGIT(yy)) goto l5;
  l24:;	
  {  int yypos25= yy->_pos, yythunkpos25= yy->_thunkpos;  if (!yyrDIGIT(yy)) goto l25;  goto l24;
  l25:;	  yy->_pos= yypos25; yy->_thunkpos= yythunkpos25;
  }  if (!yymatchClass(yy, (unsigned char *)"\000\000\000\000\000\000\000\000\040\000\000\000\040\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000")) goto l5;
  {  int yypos26= yy->_pos, yythunkpos26= yy->_thunkpos;  if (!yymatchClass(yy, (unsigned char *)"\000\000\000\000\000\050\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000")) goto l26;  goto l27;
  l26:;	  yy->_pos= yypos26; yy->_thunkpos= yythunkpos26;
  }
  l27:;	  if (!yyrDIGIT(yy)) goto l5;
  l28:;	
  {  int yypos29= yy->_pos, yythunkpos29= yy->_thunkpos;  if (!yyrDIGIT(yy)) goto l29;  goto l28;
  l29:;	  yy->_pos= yypos29; yy->_thunkpos= yythunkpos29;
  }
  }
  l12:;	
  }
  l8:;	  yyText(yy, yy->_begin, yy->_end);  {
#define yytext yy->_text
#define yyleng yy->_textlen
if (!(YY_END)) goto l5;
#undef yytext
#undef yyleng
  }  if (!yyrWB(yy)) goto l5;  yyDo(yy, yy_1_FLOAT_LITERAL, yy->_begin, yy->_end);
  yyprintf((stderr, "  ok   %s @ %s\n", "FLOAT_LITERAL", yy->_buf+yy->_pos));
  return 1;
  l5:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "FLOAT_LITERAL", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrSTRING_LITERAL(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;
  yyprintf((stderr, "%s\n", "STRING_LITERAL"));
  {  int yypos31= yy->_pos, yythunkpos31= yy->_thunkpos;  if (!yymatchChar(yy, '\'')) goto l32;  yyText(yy, yy->_begin, yy->_end);  {
#define yytext yy->_text
#define yyleng yy->_textlen
if (!(YY_BEGIN)) goto l32;
#undef yytext
#undef yyleng
  }
  l33:;	
  {  int yypos34= yy->_pos, yythunkpos34= yy->_thunkpos;
  {  int yypos35= yy->_pos, yythunkpos35= yy->_thunkpos;  if (!yymatchClass(yy, (unsigned char *)"\377\377\377\377\177\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377")) goto l36;  goto l35;
  l36:;	  yy->_pos= yypos35; yy->_thunkpos= yythunkpos35;  if (!yymatchString(yy, "''")) goto l34;
  }
  l35:;	  goto l33;
  l34:;	  yy->_pos= yypos34; yy->_thunkpos= yythunkpos34;
  }  yyText(yy, yy->_begin, yy->_end);  {
#define yytext yy->_text
#define yyleng yy->_textlen
if (!(YY_END)) goto l32;
#undef yytext
#undef yyleng
  }  if (!yymatchChar(yy, '\'')) goto l32;  if (!yyr_(yy)) goto l32;  yyDo(yy, yy_1_STRING_LITERAL, yy->_begin, yy->_end);  goto l31;
  l32:;	  yy->_pos= yypos31; yy->_thunkpos= yythunkpos31;  if (!yymatchChar(yy, '\"')) goto l30;  yyText(yy, yy->_begin, yy->_end);  {
#define yytext yy->_text
#define yyleng yy->_textlen
if (!(YY_BEGIN)) goto l30;
#undef yytext
#undef yyleng
  }
  l37:;	
  {  int yypos38= yy->_pos, yythunkpos38= yy->_thunkpos;
  {  int yypos39= yy->_pos, yythunkpos39= yy->_thunkpos;  if (!yymatchClass(yy, (unsigned char *)"\377\377\377\377\373\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377")) goto l40;  goto l39;
  l40:;	  yy->_pos= yypos39; yy->_thunkpos= yythunkpos39;  if (!yymatchString(yy, "\"\"")) goto l38;
  }
  l39:;	  goto l37;
  l38:;	  yy->_pos= yypos38; yy->_thunkpos= yythunkpos38;
  }  yyText(yy, yy->_begin, yy->_end);  {
#define yytext yy->_text
#define yyleng yy->_textlen
if (!(YY_END)) goto l30;
#undef yytext
#undef yyleng
  }  if (!yymatchChar(yy, '\"')) goto l30;  if (!yyr_(yy)) goto l30;  yyDo(yy, yy_2_STRING_LITERAL, yy->_begin, yy->_end);
  }
  l31:;	
  yyprintf((stderr, "  ok   %s @ %s\n", "STRING_LITERAL", yy->_buf+yy->_pos));
  return 1;
  l30:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "STRING_LITERAL", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrTRUE(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;
  yyprintf((stderr, "%s\n", "TRUE"));  if (!yymatchIString(yy, "true")) goto l41;  if (!yyrWB(yy)) goto l41;
  yyprintf((stderr, "  ok   %s @ %s\n", "TRUE", yy->_buf+yy->_pos));
  return 1;
  l41:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "TRUE", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrFALSE(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;
  yyprintf((stderr, "%s\n", "FALSE"));  if (!yymatchIString(yy, "false")) goto l42;  if (!yyrWB(yy)) goto l42;
  yyprintf((stderr, "  ok   %s @ %s\n", "FALSE", yy->_buf+yy->_pos));
  return 1;
  l42:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "FALSE", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrreservedWord(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;
  yyprintf((stderr, "%s\n", "reservedWord"));
  {  int yypos44= yy->_pos, yythunkpos44= yy->_thunkpos;  if (!yyrALL(yy)) goto l45;  goto l44;
  l45:;	  yy->_pos= yypos44; yy->_thunkpos= yythunkpos44;  if (!yyrAND(yy)) goto l46;  goto l44;
  l46:;	  yy->_pos= yypos44; yy->_thunkpos= yythunkpos44;  if (!yyrANY(yy)) goto l47;  goto l44;
  l47:;	  yy->_pos= yypos44; yy->_thunkpos= yythunkpos44;  if (!yyrAS(yy)) goto l48;  goto l44;
  l48:;	  yy->_pos= yypos44; yy->_thunkpos= yythunkpos44;  if (!yyrASC(yy)) goto l49;  goto l44;
  l49:;	  yy->_pos= yypos44; yy->_thunkpos= yythunkpos44;  if (!yyrBETWEEN(yy)) goto l50;  goto l44;
  l50:;	  yy->_pos= yypos44; yy->_thunkpos= yythunkpos44;  if (!yyrBY(yy)) goto l51;  goto l44;
  l51:;	  yy->_pos= yypos44; yy->_thunkpos= yythunkpos44;  if (!yyrCASE(yy)) goto l52;  goto l44;
  l52:;	  yy->_pos= yypos44; yy->_thunkpos= yythunkpos44;  if (!yyrCOLLATE(yy)) goto l53;  goto l44;
  l53:;	  yy->_pos= yypos44; yy->_thunkpos= yythunkpos44;  if (!yyrCROSS(yy)) goto l54;  goto l44;
  l54:;	  yy->_pos= yypos44; yy->_thunkpos= yythunkpos44;  if (!yyrDESC(yy)) goto l55;  goto l44;
  l55:;	  yy->_pos= yypos44; yy->_thunkpos= yythunkpos44;  if (!yyrDISTINCT(yy)) goto l56;  goto l44;
  l56:;	  yy->_pos= yypos44; yy->_thunkpos= yythunkpos44;  if (!yyrELSE(yy)) goto l57;  goto l44;
  l57:;	  yy->_pos= yypos44; yy->_thunkpos= yythunkpos44;  if (!yyrEND(yy)) goto l58;  goto l44;
  l58:;	  yy->_pos= yypos44; yy->_thunkpos= yythunkpos44;  if (!yyrEVERY(yy)) goto l59;  goto l44;
  l59:;	  yy->_pos= yypos44; yy->_thunkpos= yythunkpos44;  if (!yyrEXISTS(yy)) goto l60;  goto l44;
  l60:;	  yy->_pos= yypos44; yy->_thunkpos= yythunkpos44;  if (!yyrFALSE(yy)) goto l61;  goto l44;
  l61:;	  yy->_pos= yypos44; yy->_thunkpos= yythunkpos44;  if (!yyrFROM(yy)) goto l62;  goto l44;
  l62:;	  yy->_pos= yypos44; yy->_thunkpos= yythunkpos44;  if (!yyrGROUP(yy)) goto l63;  goto l44;
  l63:;	  yy->_pos= yypos44; yy->_thunkpos= yythunkpos44;  if (!yyrHAVING(yy)) goto l64;  goto l44;
  l64:;	  yy->_pos= yypos44; yy->_thunkpos= yythunkpos44;  if (!yyrIN(yy)) goto l65;  goto l44;
  l65:;	  yy->_pos= yypos44; yy->_thunkpos= yythunkpos44;  if (!yyrINNER(yy)) goto l66;  goto l44;
  l66:;	  yy->_pos= yypos44; yy->_thunkpos= yythunkpos44;  if (!yyrIS(yy)) goto l67;  goto l44;
  l67:;	  yy->_pos= yypos44; yy->_thunkpos= yythunkpos44;  if (!yyrJOIN(yy)) goto l68;  goto l44;
  l68:;	  yy->_pos= yypos44; yy->_thunkpos= yythunkpos44;  if (!yyrLEFT(yy)) goto l69;  goto l44;
  l69:;	  yy->_pos= yypos44; yy->_thunkpos= yythunkpos44;  if (!yyrLIKE(yy)) goto l70;  goto l44;
  l70:;	  yy->_pos= yypos44; yy->_thunkpos= yythunkpos44;  if (!yyrLIMIT(yy)) goto l71;  goto l44;
  l71:;	  yy->_pos= yypos44; yy->_thunkpos= yythunkpos44;  if (!yyrMISSING(yy)) goto l72;  goto l44;
  l72:;	  yy->_pos= yypos44; yy->_thunkpos= yythunkpos44;  if (!yyrNOT(yy)) goto l73;  goto l44;
  l73:;	  yy->_pos= yypos44; yy->_thunkpos= yythunkpos44;  if (!yyrNULL(yy)) goto l74;  goto l44;
  l74:;	  yy->_pos= yypos44; yy->_thunkpos= yythunkpos44;  if (!yyrOFFSET(yy)) goto l75;  goto l44;
  l75:;	  yy->_pos= yypos44; yy->_thunkpos= yythunkpos44;  if (!yyrON(yy)) goto l76;  goto l44;
  l76:;	  yy->_pos= yypos44; yy->_thunkpos= yythunkpos44;  if (!yyrOR(yy)) goto l77;  goto l44;
  l77:;	  yy->_pos= yypos44; yy->_thunkpos= yythunkpos44;  if (!yyrORDER(yy)) goto l78;  goto l44;
  l78:;	  yy->_pos= yypos44; yy->_thunkpos= yythunkpos44;  if (!yyrOUTER(yy)) goto l79;  goto l44;
  l79:;	  yy->_pos= yypos44; yy->_thunkpos= yythunkpos44;  if (!yyrSATISFIES(yy)) goto l80;  goto l44;
  l80:;	  yy->_pos= yypos44; yy->_thunkpos= yythunkpos44;  if (!yyrSELECT(yy)) goto l81;  goto l44;
  l81:;	  yy->_pos= yypos44; yy->_thunkpos= yythunkpos44;  if (!yyrSOME(yy)) goto l82;  goto l44;
  l82:;	  yy->_pos= yypos44; yy->_thunkpos= yythunkpos44;  if (!yyrTHEN(yy)) goto l83;  goto l44;
  l83:;	  yy->_pos= yypos44; yy->_thunkpos= yythunkpos44;  if (!yyrTRUE(yy)) goto l84;  goto l44;
  l84:;	  yy->_pos= yypos44; yy->_thunkpos= yythunkpos44;  if (!yyrUNNEST(yy)) goto l85;  goto l44;
  l85:;	  yy->_pos= yypos44; yy->_thunkpos= yythunkpos44;  if (!yyrVALUED(yy)) goto l86;  goto l44;
  l86:;	  yy->_pos= yypos44; yy->_thunkpos= yythunkpos44;  if (!yyrWHEN(yy)) goto l87;  goto l44;
  l87:;	  yy->_pos= yypos44; yy->_thunkpos= yythunkpos44;  if (!yyrWHERE(yy)) goto l43;
  }
  l44:;	
  yyprintf((stderr, "  ok   %s @ %s\n", "reservedWord", yy->_buf+yy->_pos));
  return 1;
  l43:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "reservedWord", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrfunctionName(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;
  yyprintf((stderr, "%s\n", "functionName"));  if (!yyrIDENTIFIER(yy)) goto l88;  yyText(yy, yy->_begin, yy->_end);  {
#define yytext yy->_text
#define yyleng yy->_textlen
if (!(isFunction(yytext))) goto l88;
#undef yytext
#undef yyleng
  }
  yyprintf((stderr, "  ok   %s @ %s\n", "functionName", yy->_buf+yy->_pos));
  return 1;
  l88:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "functionName", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrindexTable(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;  yyDo(yy, yyPush, 2, 0);
  yyprintf((stderr, "%s\n", "indexTable"));  yyDo(yy, yy_1_indexTable, yy->_begin, yy->_end);
  {  int yypos90= yy->_pos, yythunkpos90= yy->_thunkpos;  if (!yyrcollectionAlias(yy)) goto l90;  yyDo(yy, yySet, -2, 0);  if (!yyr_(yy)) goto l90;  if (!yymatchChar(yy, '.')) goto l90;  if (!yyr_(yy)) goto l90;  goto l91;
  l90:;	  yy->_pos= yypos90; yy->_thunkpos= yythunkpos90;
  }
  l91:;	  if (!yyrindexName(yy)) goto l89;  yyDo(yy, yySet, -1, 0);  yyDo(yy, yy_2_indexTable, yy->_begin, yy->_end);
  yyprintf((stderr, "  ok   %s @ %s\n", "indexTable", yy->_buf+yy->_pos));  yyDo(yy, yyPop, 2, 0);
  return 1;
  l89:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "indexTable", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrINT_LITERAL(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;
  yyprintf((stderr, "%s\n", "INT_LITERAL"));  yyText(yy, yy->_begin, yy->_end);  {
#define yytext yy->_text
#define yyleng yy->_textlen
if (!(YY_BEGIN)) goto l92;
#undef yytext
#undef yyleng
  }
  {  int yypos93= yy->_pos, yythunkpos93= yy->_thunkpos;  if (!yymatchChar(yy, '-')) goto l93;  goto l94;
  l93:;	  yy->_pos= yypos93; yy->_thunkpos= yythunkpos93;
  }
  l94:;	  if (!yyrDIGIT(yy)) goto l92;
  l95:;	
  {  int yypos96= yy->_pos, yythunkpos96= yy->_thunkpos;  if (!yyrDIGIT(yy)) goto l96;  goto l95;
  l96:;	  yy->_pos= yypos96; yy->_thunkpos= yythunkpos96;
  }  yyText(yy, yy->_begin, yy->_end);  {
#define yytext yy->_text
#define yyleng yy->_textlen
if (!(YY_END)) goto l92;
#undef yytext
#undef yyleng
  }  if (!yyrWB(yy)) goto l92;  yyDo(yy, yy_1_INT_LITERAL, yy->_begin, yy->_end);
  yyprintf((stderr, "  ok   %s @ %s\n", "INT_LITERAL", yy->_buf+yy->_pos));
  return 1;
  l92:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "INT_LITERAL", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrpropertyName(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;
  yyprintf((stderr, "%s\n", "propertyName"));  if (!yyrIDENTIFIER(yy)) goto l97;
  yyprintf((stderr, "  ok   %s @ %s\n", "propertyName", yy->_buf+yy->_pos));
  return 1;
  l97:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "propertyName", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrproperty(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;  yyDo(yy, yyPush, 2, 0);
  yyprintf((stderr, "%s\n", "property"));
  {  int yypos99= yy->_pos, yythunkpos99= yy->_thunkpos;  if (!yymatchChar(yy, '*')) goto l100;  yyDo(yy, yy_1_property, yy->_begin, yy->_end);  goto l99;
  l100:;	  yy->_pos= yypos99; yy->_thunkpos= yythunkpos99;  if (!yyrcollectionAlias(yy)) goto l101;  yyDo(yy, yySet, -2, 0);  if (!yymatchChar(yy, '.')) goto l101;  if (!yyr_(yy)) goto l101;  if (!yymatchChar(yy, '*')) goto l101;  yyDo(yy, yy_2_property, yy->_begin, yy->_end);  goto l99;
  l101:;	  yy->_pos= yypos99; yy->_thunkpos= yythunkpos99;  if (!yyrpropertyPath(yy)) goto l98;  yyDo(yy, yySet, -1, 0);  yyDo(yy, yy_3_property, yy->_begin, yy->_end);
  }
  l99:;	
  yyprintf((stderr, "  ok   %s @ %s\n", "property", yy->_buf+yy->_pos));  yyDo(yy, yyPop, 2, 0);
  return 1;
  l98:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "property", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrfunction(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;  yyDo(yy, yyPush, 6, 0);
  yyprintf((stderr, "%s\n", "function"));
  {  int yypos103= yy->_pos, yythunkpos103= yy->_thunkpos;  if (!yymatchIString(yy, "meta")) goto l104;  if (!yyr_(yy)) goto l104;  if (!yymatchChar(yy, '(')) goto l104;  if (!yyr_(yy)) goto l104;  yyDo(yy, yy_1_function, yy->_begin, yy->_end);
  {  int yypos105= yy->_pos, yythunkpos105= yy->_thunkpos;  if (!yyrIDENTIFIER(yy)) goto l105;  yyDo(yy, yySet, -6, 0);  if (!yyr_(yy)) goto l105;  yyDo(yy, yy_2_function, yy->_begin, yy->_end);  goto l106;
  l105:;	  yy->_pos= yypos105; yy->_thunkpos= yythunkpos105;
  }
  l106:;	  if (!yymatchChar(yy, ')')) goto l104;  if (!yyr_(yy)) goto l104;  yyDo(yy, yy_3_function, yy->_begin, yy->_end);  goto l103;
  l104:;	  yy->_pos= yypos103; yy->_thunkpos= yythunkpos103;  if (!yymatchIString(yy, "match")) goto l107;  if (!yyr_(yy)) goto l107;  if (!yymatchChar(yy, '(')) goto l107;  if (!yyr_(yy)) goto l107;  yyDo(yy, yy_4_function, yy->_begin, yy->_end);  if (!yyrindexTable(yy)) goto l107;  yyDo(yy, yySet, -5, 0);  if (!yyr_(yy)) goto l107;  if (!yymatchChar(yy, ',')) goto l107;  if (!yyr_(yy)) goto l107;  yyDo(yy, yy_5_function, yy->_begin, yy->_end);  if (!yyrexpression(yy)) goto l107;  yyDo(yy, yySet, -4, 0);  if (!yyr_(yy)) goto l107;  yyDo(yy, yy_6_function, yy->_begin, yy->_end);  if (!yymatchChar(yy, ')')) goto l107;  if (!yyr_(yy)) goto l107;  yyDo(yy, yy_7_function, yy->_begin, yy->_end);  goto l103;
  l107:;	  yy->_pos= yypos103; yy->_thunkpos= yythunkpos103;  if (!yymatchIString(yy, "prediction")) goto l108;  if (!yyr_(yy)) goto l108;  if (!yymatchChar(yy, '(')) goto l108;  if (!yyr_(yy)) goto l108;  yyDo(yy, yy_8_function, yy->_begin, yy->_end);  if (!yyrIDENTIFIER(yy)) goto l108;  yyDo(yy, yySet, -3, 0);  if (!yyr_(yy)) goto l108;  if (!yymatchChar(yy, ',')) goto l108;  if (!yyr_(yy)) goto l108;  yyDo(yy, yy_9_function, yy->_begin, yy->_end);  if (!yyrexpression(yy)) goto l108;  yyDo(yy, yySet, -4, 0);  if (!yyr_(yy)) goto l108;  yyDo(yy, yy_10_function, yy->_begin, yy->_end);
  {  int yypos109= yy->_pos, yythunkpos109= yy->_thunkpos;  if (!yymatchChar(yy, ',')) goto l109;  if (!yyr_(yy)) goto l109;  if (!yyrexpression(yy)) goto l109;  yyDo(yy, yySet, -4, 0);  yyDo(yy, yy_11_function, yy->_begin, yy->_end);  if (!yyr_(yy)) goto l109;  goto l110;
  l109:;	  yy->_pos= yypos109; yy->_thunkpos= yythunkpos109;
  }
  l110:;	  if (!yymatchChar(yy, ')')) goto l108;  if (!yyr_(yy)) goto l108;  yyDo(yy, yy_12_function, yy->_begin, yy->_end);  goto l103;
  l108:;	  yy->_pos= yypos103; yy->_thunkpos= yythunkpos103;  if (!yymatchIString(yy, "rank")) goto l111;  if (!yyr_(yy)) goto l111;  if (!yymatchChar(yy, '(')) goto l111;  if (!yyr_(yy)) goto l111;  yyDo(yy, yy_13_function, yy->_begin, yy->_end);  if (!yyrindexTable(yy)) goto l111;  yyDo(yy, yySet, -5, 0);  if (!yyr_(yy)) goto l111;  yyDo(yy, yy_14_function, yy->_begin, yy->_end);  if (!yymatchChar(yy, ')')) goto l111;  if (!yyr_(yy)) goto l111;  yyDo(yy, yy_15_function, yy->_begin, yy->_end);  goto l103;
  l111:;	  yy->_pos= yypos103; yy->_thunkpos= yythunkpos103;  if (!yyrfunctionName(yy)) goto l102;  yyDo(yy, yySet, -2, 0);  if (!yyrparenExprs(yy)) goto l102;  yyDo(yy, yySet, -1, 0);  yyDo(yy, yy_16_function, yy->_begin, yy->_end);
  }
  l103:;	
  yyprintf((stderr, "  ok   %s @ %s\n", "function", yy->_buf+yy->_pos));  yyDo(yy, yyPop, 6, 0);
  return 1;
  l102:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "function", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrEXISTS(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;
  yyprintf((stderr, "%s\n", "EXISTS"));  if (!yymatchIString(yy, "exists")) goto l112;  if (!yyrWB(yy)) goto l112;
  yyprintf((stderr, "  ok   %s @ %s\n", "EXISTS", yy->_buf+yy->_pos));
  return 1;
  l112:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "EXISTS", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrOP_PREFIX(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;
  yyprintf((stderr, "%s\n", "OP_PREFIX"));  yyText(yy, yy->_begin, yy->_end);  {
#define yytext yy->_text
#define yyleng yy->_textlen
if (!(YY_BEGIN)) goto l113;
#undef yytext
#undef yyleng
  }
  {  int yypos114= yy->_pos, yythunkpos114= yy->_thunkpos;  if (!yymatchChar(yy, '-')) goto l115;  goto l114;
  l115:;	  yy->_pos= yypos114; yy->_thunkpos= yythunkpos114;  if (!yymatchChar(yy, '+')) goto l116;  goto l114;
  l116:;	  yy->_pos= yypos114; yy->_thunkpos= yythunkpos114;  if (!yyrNOT(yy)) goto l113;
  }
  l114:;	  yyText(yy, yy->_begin, yy->_end);  {
#define yytext yy->_text
#define yyleng yy->_textlen
if (!(YY_END)) goto l113;
#undef yytext
#undef yyleng
  }  yyDo(yy, yy_1_OP_PREFIX, yy->_begin, yy->_end);
  yyprintf((stderr, "  ok   %s @ %s\n", "OP_PREFIX", yy->_buf+yy->_pos));
  return 1;
  l113:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "OP_PREFIX", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrdictLiteral(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;  yyDo(yy, yyPush, 3, 0);
  yyprintf((stderr, "%s\n", "dictLiteral"));  if (!yymatchChar(yy, '{')) goto l117;  if (!yyr_(yy)) goto l117;
  {  int yypos118= yy->_pos, yythunkpos118= yy->_thunkpos;  if (!yyrSTRING_LITERAL(yy)) goto l118;  yyDo(yy, yySet, -3, 0);  if (!yymatchChar(yy, ':')) goto l118;  if (!yyr_(yy)) goto l118;  if (!yyrexpression(yy)) goto l118;  yyDo(yy, yySet, -2, 0);  yyDo(yy, yy_1_dictLiteral, yy->_begin, yy->_end);
  l120:;	
  {  int yypos121= yy->_pos, yythunkpos121= yy->_thunkpos;  if (!yyr_(yy)) goto l121;  if (!yymatchChar(yy, ',')) goto l121;  if (!yyr_(yy)) goto l121;  if (!yyrSTRING_LITERAL(yy)) goto l121;  yyDo(yy, yySet, -3, 0);  if (!yymatchChar(yy, ':')) goto l121;  if (!yyr_(yy)) goto l121;  if (!yyrexpression(yy)) goto l121;  yyDo(yy, yySet, -1, 0);  yyDo(yy, yy_2_dictLiteral, yy->_begin, yy->_end);  goto l120;
  l121:;	  yy->_pos= yypos121; yy->_thunkpos= yythunkpos121;
  }  goto l119;
  l118:;	  yy->_pos= yypos118; yy->_thunkpos= yythunkpos118;
  }
  l119:;	  if (!yymatchChar(yy, '}')) goto l117;  yyDo(yy, yy_3_dictLiteral, yy->_begin, yy->_end);
  yyprintf((stderr, "  ok   %s @ %s\n", "dictLiteral", yy->_buf+yy->_pos));  yyDo(yy, yyPop, 3, 0);
  return 1;
  l117:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "dictLiteral", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrliteral(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;
  yyprintf((stderr, "%s\n", "literal"));
  {  int yypos123= yy->_pos, yythunkpos123= yy->_thunkpos;  if (!yyrFLOAT_LITERAL(yy)) goto l124;  goto l123;
  l124:;	  yy->_pos= yypos123; yy->_thunkpos= yythunkpos123;  if (!yyrINT_LITERAL(yy)) goto l125;  goto l123;
  l125:;	  yy->_pos= yypos123; yy->_thunkpos= yythunkpos123;  if (!yyrBOOLEAN_LITERAL(yy)) goto l126;  goto l123;
  l126:;	  yy->_pos= yypos123; yy->_thunkpos= yythunkpos123;  if (!yyrSTRING_LITERAL(yy)) goto l127;  goto l123;
  l127:;	  yy->_pos= yypos123; yy->_thunkpos= yythunkpos123;  if (!yyrNULL(yy)) goto l128;  yyDo(yy, yy_1_literal, yy->_begin, yy->_end);  goto l123;
  l128:;	  yy->_pos= yypos123; yy->_thunkpos= yythunkpos123;  if (!yyrMISSING(yy)) goto l122;  yyDo(yy, yy_2_literal, yy->_begin, yy->_end);
  }
  l123:;	
  yyprintf((stderr, "  ok   %s @ %s\n", "literal", yy->_buf+yy->_pos));
  return 1;
  l122:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "literal", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrbaseExpr_(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;  yyDo(yy, yyPush, 3, 0);
  yyprintf((stderr, "%s\n", "baseExpr_"));
  {  int yypos130= yy->_pos, yythunkpos130= yy->_thunkpos;  if (!yyrliteral(yy)) goto l131;  goto l130;
  l131:;	  yy->_pos= yypos130; yy->_thunkpos= yythunkpos130;  if (!yyrarrayLiteral(yy)) goto l132;  goto l130;
  l132:;	  yy->_pos= yypos130; yy->_thunkpos= yythunkpos130;  if (!yyrdictLiteral(yy)) goto l133;  goto l130;
  l133:;	  yy->_pos= yypos130; yy->_thunkpos= yythunkpos130;  if (!yyrOP_PREFIX(yy)) goto l134;  yyDo(yy, yySet, -3, 0);  if (!yyr_(yy)) goto l134;  if (!yyrbaseExpr(yy)) goto l134;  yyDo(yy, yySet, -2, 0);  yyDo(yy, yy_1_baseExpr_, yy->_begin, yy->_end);  goto l130;
  l134:;	  yy->_pos= yypos130; yy->_thunkpos= yythunkpos130;  if (!yyrEXISTS(yy)) goto l135;  if (!yyrselectExpr(yy)) goto l135;  yyDo(yy, yySet, -1, 0);  yyDo(yy, yy_2_baseExpr_, yy->_begin, yy->_end);  goto l130;
  l135:;	  yy->_pos= yypos130; yy->_thunkpos= yythunkpos130;  if (!yyrcaseExpression(yy)) goto l136;  goto l130;
  l136:;	  yy->_pos= yypos130; yy->_thunkpos= yythunkpos130;  if (!yyranyEveryExpression(yy)) goto l137;  goto l130;
  l137:;	  yy->_pos= yypos130; yy->_thunkpos= yythunkpos130;  if (!yymatchChar(yy, '$')) goto l138;  if (!yyrIDENTIFIER(yy)) goto l138;  yyDo(yy, yy_3_baseExpr_, yy->_begin, yy->_end);  goto l130;
  l138:;	  yy->_pos= yypos130; yy->_thunkpos= yythunkpos130;  if (!yyrfunction(yy)) goto l139;  goto l130;
  l139:;	  yy->_pos= yypos130; yy->_thunkpos= yythunkpos130;  if (!yyrproperty(yy)) goto l140;  goto l130;
  l140:;	  yy->_pos= yypos130; yy->_thunkpos= yythunkpos130;  if (!yymatchChar(yy, '(')) goto l129;  if (!yyr_(yy)) goto l129;  if (!yyrexpression(yy)) goto l129;  if (!yyr_(yy)) goto l129;  if (!yymatchChar(yy, ')')) goto l129;
  }
  l130:;	
  yyprintf((stderr, "  ok   %s @ %s\n", "baseExpr_", yy->_buf+yy->_pos));  yyDo(yy, yyPop, 3, 0);
  return 1;
  l129:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "baseExpr_", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrWB(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;
  yyprintf((stderr, "%s\n", "WB"));
  {  int yypos142= yy->_pos, yythunkpos142= yy->_thunkpos;  int yymaxpos142= yy->_maxpos;  if (!yymatchClass(yy, (unsigned char *)"\000\000\000\000\000\000\377\003\376\377\377\207\376\377\377\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000")) goto l142;  yy->_maxpos= yymaxpos142;  goto l141;
  l142:;	  yy->_pos= yypos142; yy->_thunkpos= yythunkpos142;  yy->_maxpos= yymaxpos142;
  }  if (!yyr_(yy)) goto l141;
  yyprintf((stderr, "  ok   %s @ %s\n", "WB", yy->_buf+yy->_pos));
  return 1;
  l141:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "WB", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrcollationLang(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;
  yyprintf((stderr, "%s\n", "collationLang"));
  {  int yypos144= yy->_pos, yythunkpos144= yy->_thunkpos;  yyText(yy, yy->_begin, yy->_end);  {
#define yytext yy->_text
#define yyleng yy->_textlen
if (!(YY_BEGIN)) goto l145;
#undef yytext
#undef yyleng
  }  if (!yymatchIString(yy, "nounicode")) goto l145;  yyText(yy, yy->_begin, yy->_end);  {
#define yytext yy->_text
#define yyleng yy->_textlen
if (!(YY_END)) goto l145;
#undef yytext
#undef yyleng
  }  yyDo(yy, yy_1_collationLang, yy->_begin, yy->_end);  goto l144;
  l145:;	  yy->_pos= yypos144; yy->_thunkpos= yythunkpos144;  if (!yymatchIString(yy, "unicode")) goto l143;  yyDo(yy, yy_2_collationLang, yy->_begin, yy->_end);  yyText(yy, yy->_begin, yy->_end);  {
#define yytext yy->_text
#define yyleng yy->_textlen
if (!(YY_BEGIN)) goto l143;
#undef yytext
#undef yyleng
  }
  {  int yypos146= yy->_pos, yythunkpos146= yy->_thunkpos;  if (!yymatchChar(yy, ':')) goto l146;  if (!yymatchClass(yy, (unsigned char *)"\000\000\000\000\000\000\000\000\376\377\377\007\376\377\377\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000")) goto l146;
  l148:;	
  {  int yypos149= yy->_pos, yythunkpos149= yy->_thunkpos;  if (!yymatchClass(yy, (unsigned char *)"\000\000\000\000\000\000\377\003\376\377\377\207\376\377\377\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000")) goto l149;  goto l148;
  l149:;	  yy->_pos= yypos149; yy->_thunkpos= yythunkpos149;
  }  goto l147;
  l146:;	  yy->_pos= yypos146; yy->_thunkpos= yythunkpos146;
  }
  l147:;	  yyText(yy, yy->_begin, yy->_end);  {
#define yytext yy->_text
#define yyleng yy->_textlen
if (!(YY_END)) goto l143;
#undef yytext
#undef yyleng
  }  yyDo(yy, yy_3_collationLang, yy->_begin, yy->_end);
  }
  l144:;	
  yyprintf((stderr, "  ok   %s @ %s\n", "collationLang", yy->_buf+yy->_pos));
  return 1;
  l143:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "collationLang", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrcollation(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;  yyDo(yy, yyPush, 1, 0);
  yyprintf((stderr, "%s\n", "collation"));
  {  int yypos151= yy->_pos, yythunkpos151= yy->_thunkpos;  if (!yyrcollationLang(yy)) goto l152;  yyDo(yy, yySet, -1, 0);  if (!yyr_(yy)) goto l152;  yyDo(yy, yy_1_collation, yy->_begin, yy->_end);  goto l151;
  l152:;	  yy->_pos= yypos151; yy->_thunkpos= yythunkpos151;  yyText(yy, yy->_begin, yy->_end);  {
#define yytext yy->_text
#define yyleng yy->_textlen
if (!(YY_BEGIN)) goto l150;
#undef yytext
#undef yyleng
  }
  {  int yypos153= yy->_pos, yythunkpos153= yy->_thunkpos;  if (!yymatchIString(yy, "no")) goto l153;  goto l154;
  l153:;	  yy->_pos= yypos153; yy->_thunkpos= yythunkpos153;
  }
  l154:;	
  {  int yypos155= yy->_pos, yythunkpos155= yy->_thunkpos;  if (!yymatchIString(yy, "case")) goto l156;  goto l155;
  l156:;	  yy->_pos= yypos155; yy->_thunkpos= yythunkpos155;  if (!yymatchIString(yy, "diac")) goto l150;
  }
  l155:;	  yyText(yy, yy->_begin, yy->_end);  {
#define yytext yy->_text
#define yyleng yy->_textlen
if (!(YY_END)) goto l150;
#undef yytext
#undef yyleng
  }  if (!yyrWB(yy)) goto l150;  yyDo(yy, yy_2_collation, yy->_begin, yy->_end);
  }
  l151:;	
  yyprintf((stderr, "  ok   %s @ %s\n", "collation", yy->_buf+yy->_pos));  yyDo(yy, yyPop, 1, 0);
  return 1;
  l150:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "collation", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrCOLLATE(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;
  yyprintf((stderr, "%s\n", "COLLATE"));  if (!yymatchIString(yy, "collate")) goto l157;  if (!yyrWB(yy)) goto l157;
  yyprintf((stderr, "  ok   %s @ %s\n", "COLLATE", yy->_buf+yy->_pos));
  return 1;
  l157:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "COLLATE", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrbaseExpr(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;
  yyprintf((stderr, "%s\n", "baseExpr"));  if (!yyrbaseExpr_(yy)) goto l158;  if (!yyr_(yy)) goto l158;
  yyprintf((stderr, "  ok   %s @ %s\n", "baseExpr", yy->_buf+yy->_pos));
  return 1;
  l158:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "baseExpr", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrarrayLiteral(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;  yyDo(yy, yyPush, 2, 0);
  yyprintf((stderr, "%s\n", "arrayLiteral"));  if (!yymatchChar(yy, '[')) goto l159;  if (!yyr_(yy)) goto l159;
  {  int yypos160= yy->_pos, yythunkpos160= yy->_thunkpos;  if (!yyrexpression(yy)) goto l160;  yyDo(yy, yySet, -2, 0);  yyDo(yy, yy_1_arrayLiteral, yy->_begin, yy->_end);
  l162:;	
  {  int yypos163= yy->_pos, yythunkpos163= yy->_thunkpos;  if (!yyr_(yy)) goto l163;  if (!yymatchChar(yy, ',')) goto l163;  if (!yyr_(yy)) goto l163;  if (!yyrexpression(yy)) goto l163;  yyDo(yy, yySet, -1, 0);  yyDo(yy, yy_2_arrayLiteral, yy->_begin, yy->_end);  goto l162;
  l163:;	  yy->_pos= yypos163; yy->_thunkpos= yythunkpos163;
  }  goto l161;
  l160:;	  yy->_pos= yypos160; yy->_thunkpos= yythunkpos160;
  }
  l161:;	  if (!yymatchChar(yy, ']')) goto l159;  yyDo(yy, yy_3_arrayLiteral, yy->_begin, yy->_end);
  yyprintf((stderr, "  ok   %s @ %s\n", "arrayLiteral", yy->_buf+yy->_pos));  yyDo(yy, yyPop, 2, 0);
  return 1;
  l159:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "arrayLiteral", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrparenExprs(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;  yyDo(yy, yyPush, 3, 0);
  yyprintf((stderr, "%s\n", "parenExprs"));  if (!yyr_(yy)) goto l164;  yyDo(yy, yySet, -3, 0);  if (!yymatchChar(yy, '(')) goto l164;  if (!yyr_(yy)) goto l164;  yyDo(yy, yy_1_parenExprs, yy->_begin, yy->_end);
  {  int yypos165= yy->_pos, yythunkpos165= yy->_thunkpos;  if (!yyrexpression(yy)) goto l165;  yyDo(yy, yySet, -2, 0);  yyDo(yy, yy_2_parenExprs, yy->_begin, yy->_end);
  l167:;	
  {  int yypos168= yy->_pos, yythunkpos168= yy->_thunkpos;  if (!yymatchChar(yy, ',')) goto l168;  if (!yyr_(yy)) goto l168;  if (!yyrexpression(yy)) goto l168;  yyDo(yy, yySet, -1, 0);  yyDo(yy, yy_3_parenExprs, yy->_begin, yy->_end);  goto l167;
  l168:;	  yy->_pos= yypos168; yy->_thunkpos= yythunkpos168;
  }  goto l166;
  l165:;	  yy->_pos= yypos165; yy->_thunkpos= yythunkpos165;
  }
  l166:;	  if (!yymatchChar(yy, ')')) goto l164;  yyDo(yy, yy_4_parenExprs, yy->_begin, yy->_end);
  yyprintf((stderr, "  ok   %s @ %s\n", "parenExprs", yy->_buf+yy->_pos));  yyDo(yy, yyPop, 3, 0);
  return 1;
  l164:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "parenExprs", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrselectExpr(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;  yyDo(yy, yyPush, 1, 0);
  yyprintf((stderr, "%s\n", "selectExpr"));  if (!yymatchChar(yy, '(')) goto l169;  if (!yyrselectStatement(yy)) goto l169;  yyDo(yy, yySet, -1, 0);  if (!yymatchChar(yy, ')')) goto l169;  yyDo(yy, yy_1_selectExpr, yy->_begin, yy->_end);
  yyprintf((stderr, "  ok   %s @ %s\n", "selectExpr", yy->_buf+yy->_pos));  yyDo(yy, yyPop, 1, 0);
  return 1;
  l169:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "selectExpr", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrIN_OR_NOT(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;
  yyprintf((stderr, "%s\n", "IN_OR_NOT"));
  {  int yypos171= yy->_pos, yythunkpos171= yy->_thunkpos;  if (!yyrNOT(yy)) goto l172;  if (!yyrIN(yy)) goto l172;  yyDo(yy, yy_1_IN_OR_NOT, yy->_begin, yy->_end);  goto l171;
  l172:;	  yy->_pos= yypos171; yy->_thunkpos= yythunkpos171;  if (!yyrIN(yy)) goto l170;  yyDo(yy, yy_2_IN_OR_NOT, yy->_begin, yy->_end);
  }
  l171:;	
  yyprintf((stderr, "  ok   %s @ %s\n", "IN_OR_NOT", yy->_buf+yy->_pos));
  return 1;
  l170:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "IN_OR_NOT", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrOR(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;
  yyprintf((stderr, "%s\n", "OR"));  if (!yymatchIString(yy, "or")) goto l173;  if (!yyrWB(yy)) goto l173;
  yyprintf((stderr, "  ok   %s @ %s\n", "OR", yy->_buf+yy->_pos));
  return 1;
  l173:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "OR", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrBETWEEN(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;
  yyprintf((stderr, "%s\n", "BETWEEN"));  if (!yymatchIString(yy, "between")) goto l174;  if (!yyrWB(yy)) goto l174;
  yyprintf((stderr, "  ok   %s @ %s\n", "BETWEEN", yy->_buf+yy->_pos));
  return 1;
  l174:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "BETWEEN", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrLIKE(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;
  yyprintf((stderr, "%s\n", "LIKE"));  if (!yymatchIString(yy, "like")) goto l175;  if (!yyrWB(yy)) goto l175;
  yyprintf((stderr, "  ok   %s @ %s\n", "LIKE", yy->_buf+yy->_pos));
  return 1;
  l175:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "LIKE", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrOP_PREC_1(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;
  yyprintf((stderr, "%s\n", "OP_PREC_1"));  yyText(yy, yy->_begin, yy->_end);  {
#define yytext yy->_text
#define yyleng yy->_textlen
if (!(YY_BEGIN)) goto l176;
#undef yytext
#undef yyleng
  }  if (!yymatchString(yy, "||")) goto l176;  yyText(yy, yy->_begin, yy->_end);  {
#define yytext yy->_text
#define yyleng yy->_textlen
if (!(YY_END)) goto l176;
#undef yytext
#undef yyleng
  }  yyDo(yy, yy_1_OP_PREC_1, yy->_begin, yy->_end);
  yyprintf((stderr, "  ok   %s @ %s\n", "OP_PREC_1", yy->_buf+yy->_pos));
  return 1;
  l176:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "OP_PREC_1", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrexpr0(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;  yyDo(yy, yyPush, 2, 0);
  yyprintf((stderr, "%s\n", "expr0"));
  {  int yypos178= yy->_pos, yythunkpos178= yy->_thunkpos;  if (!yyrbaseExpr(yy)) goto l179;  yyDo(yy, yySet, -2, 0);  if (!yymatchChar(yy, '.')) goto l179;  if (!yyrpropertyPath(yy)) goto l179;  yyDo(yy, yySet, -1, 0);  yyDo(yy, yy_1_expr0, yy->_begin, yy->_end);  goto l178;
  l179:;	  yy->_pos= yypos178; yy->_thunkpos= yythunkpos178;  if (!yyrbaseExpr(yy)) goto l177;  yyDo(yy, yySet, -2, 0);  yyDo(yy, yy_2_expr0, yy->_begin, yy->_end);
  }
  l178:;	
  yyprintf((stderr, "  ok   %s @ %s\n", "expr0", yy->_buf+yy->_pos));  yyDo(yy, yyPop, 2, 0);
  return 1;
  l177:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "expr0", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrOP_PREC_2(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;
  yyprintf((stderr, "%s\n", "OP_PREC_2"));  yyText(yy, yy->_begin, yy->_end);  {
#define yytext yy->_text
#define yyleng yy->_textlen
if (!(YY_BEGIN)) goto l180;
#undef yytext
#undef yyleng
  }  if (!yymatchClass(yy, (unsigned char *)"\000\000\000\000\040\204\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000")) goto l180;  yyText(yy, yy->_begin, yy->_end);  {
#define yytext yy->_text
#define yyleng yy->_textlen
if (!(YY_END)) goto l180;
#undef yytext
#undef yyleng
  }  yyDo(yy, yy_1_OP_PREC_2, yy->_begin, yy->_end);
  yyprintf((stderr, "  ok   %s @ %s\n", "OP_PREC_2", yy->_buf+yy->_pos));
  return 1;
  l180:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "OP_PREC_2", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrexpr1(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;  yyDo(yy, yyPush, 3, 0);
  yyprintf((stderr, "%s\n", "expr1"));  if (!yyrexpr0(yy)) goto l181;  yyDo(yy, yySet, -3, 0);
  l182:;	
  {  int yypos183= yy->_pos, yythunkpos183= yy->_thunkpos;  if (!yyr_(yy)) goto l183;  if (!yyrOP_PREC_1(yy)) goto l183;  yyDo(yy, yySet, -2, 0);  if (!yyr_(yy)) goto l183;  if (!yyrexpr0(yy)) goto l183;  yyDo(yy, yySet, -1, 0);  yyDo(yy, yy_1_expr1, yy->_begin, yy->_end);  goto l182;
  l183:;	  yy->_pos= yypos183; yy->_thunkpos= yythunkpos183;
  }  yyDo(yy, yy_2_expr1, yy->_begin, yy->_end);
  yyprintf((stderr, "  ok   %s @ %s\n", "expr1", yy->_buf+yy->_pos));  yyDo(yy, yyPop, 3, 0);
  return 1;
  l181:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "expr1", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrOP_PREC_3(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;
  yyprintf((stderr, "%s\n", "OP_PREC_3"));  yyText(yy, yy->_begin, yy->_end);  {
#define yytext yy->_text
#define yyleng yy->_textlen
if (!(YY_BEGIN)) goto l184;
#undef yytext
#undef yyleng
  }  if (!yymatchClass(yy, (unsigned char *)"\000\000\000\000\000\050\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000")) goto l184;  yyText(yy, yy->_begin, yy->_end);  {
#define yytext yy->_text
#define yyleng yy->_textlen
if (!(YY_END)) goto l184;
#undef yytext
#undef yyleng
  }  yyDo(yy, yy_1_OP_PREC_3, yy->_begin, yy->_end);
  yyprintf((stderr, "  ok   %s @ %s\n", "OP_PREC_3", yy->_buf+yy->_pos));
  return 1;
  l184:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "OP_PREC_3", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrexpr2(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;  yyDo(yy, yyPush, 3, 0);
  yyprintf((stderr, "%s\n", "expr2"));  if (!yyrexpr1(yy)) goto l185;  yyDo(yy, yySet, -3, 0);
  l186:;	
  {  int yypos187= yy->_pos, yythunkpos187= yy->_thunkpos;  if (!yyr_(yy)) goto l187;  if (!yyrOP_PREC_2(yy)) goto l187;  yyDo(yy, yySet, -2, 0);  if (!yyr_(yy)) goto l187;  if (!yyrexpr1(yy)) goto l187;  yyDo(yy, yySet, -1, 0);  yyDo(yy, yy_1_expr2, yy->_begin, yy->_end);  goto l186;
  l187:;	  yy->_pos= yypos187; yy->_thunkpos= yythunkpos187;
  }  yyDo(yy, yy_2_expr2, yy->_begin, yy->_end);
  yyprintf((stderr, "  ok   %s @ %s\n", "expr2", yy->_buf+yy->_pos));  yyDo(yy, yyPop, 3, 0);
  return 1;
  l185:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "expr2", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrOP_PREC_4(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;
  yyprintf((stderr, "%s\n", "OP_PREC_4"));  yyText(yy, yy->_begin, yy->_end);  {
#define yytext yy->_text
#define yyleng yy->_textlen
if (!(YY_BEGIN)) goto l188;
#undef yytext
#undef yyleng
  }
  {  int yypos189= yy->_pos, yythunkpos189= yy->_thunkpos;  if (!yymatchString(yy, "<<")) goto l190;  goto l189;
  l190:;	  yy->_pos= yypos189; yy->_thunkpos= yythunkpos189;  if (!yymatchString(yy, ">>")) goto l191;  goto l189;
  l191:;	  yy->_pos= yypos189; yy->_thunkpos= yythunkpos189;  if (!yymatchChar(yy, '&')) goto l192;  goto l189;
  l192:;	  yy->_pos= yypos189; yy->_thunkpos= yythunkpos189;  if (!yymatchChar(yy, '|')) goto l188;
  }
  l189:;	  yyText(yy, yy->_begin, yy->_end);  {
#define yytext yy->_text
#define yyleng yy->_textlen
if (!(YY_END)) goto l188;
#undef yytext
#undef yyleng
  }  yyDo(yy, yy_1_OP_PREC_4, yy->_begin, yy->_end);
  yyprintf((stderr, "  ok   %s @ %s\n", "OP_PREC_4", yy->_buf+yy->_pos));
  return 1;
  l188:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "OP_PREC_4", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrexpr3(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;  yyDo(yy, yyPush, 3, 0);
  yyprintf((stderr, "%s\n", "expr3"));  if (!yyrexpr2(yy)) goto l193;  yyDo(yy, yySet, -3, 0);
  l194:;	
  {  int yypos195= yy->_pos, yythunkpos195= yy->_thunkpos;  if (!yyr_(yy)) goto l195;  if (!yyrOP_PREC_3(yy)) goto l195;  yyDo(yy, yySet, -2, 0);  if (!yyr_(yy)) goto l195;  if (!yyrexpr2(yy)) goto l195;  yyDo(yy, yySet, -1, 0);  yyDo(yy, yy_1_expr3, yy->_begin, yy->_end);  goto l194;
  l195:;	  yy->_pos= yypos195; yy->_thunkpos= yythunkpos195;
  }  yyDo(yy, yy_2_expr3, yy->_begin, yy->_end);
  yyprintf((stderr, "  ok   %s @ %s\n", "expr3", yy->_buf+yy->_pos));  yyDo(yy, yyPop, 3, 0);
  return 1;
  l193:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "expr3", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrOP_PREC_5(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;
  yyprintf((stderr, "%s\n", "OP_PREC_5"));  yyText(yy, yy->_begin, yy->_end);  {
#define yytext yy->_text
#define yyleng yy->_textlen
if (!(YY_BEGIN)) goto l196;
#undef yytext
#undef yyleng
  }
  {  int yypos197= yy->_pos, yythunkpos197= yy->_thunkpos;  if (!yymatchString(yy, "<=")) goto l198;  goto l197;
  l198:;	  yy->_pos= yypos197; yy->_thunkpos= yythunkpos197;  if (!yymatchChar(yy, '<')) goto l199;  goto l197;
  l199:;	  yy->_pos= yypos197; yy->_thunkpos= yythunkpos197;  if (!yymatchString(yy, ">=")) goto l200;  goto l197;
  l200:;	  yy->_pos= yypos197; yy->_thunkpos= yythunkpos197;  if (!yymatchChar(yy, '>')) goto l196;
  }
  l197:;	  yyText(yy, yy->_begin, yy->_end);  {
#define yytext yy->_text
#define yyleng yy->_textlen
if (!(YY_END)) goto l196;
#undef yytext
#undef yyleng
  }  yyDo(yy, yy_1_OP_PREC_5, yy->_begin, yy->_end);
  yyprintf((stderr, "  ok   %s @ %s\n", "OP_PREC_5", yy->_buf+yy->_pos));
  return 1;
  l196:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "OP_PREC_5", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrexpr4(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;  yyDo(yy, yyPush, 3, 0);
  yyprintf((stderr, "%s\n", "expr4"));  if (!yyrexpr3(yy)) goto l201;  yyDo(yy, yySet, -3, 0);
  l202:;	
  {  int yypos203= yy->_pos, yythunkpos203= yy->_thunkpos;  if (!yyr_(yy)) goto l203;  if (!yyrOP_PREC_4(yy)) goto l203;  yyDo(yy, yySet, -2, 0);  if (!yyr_(yy)) goto l203;  if (!yyrexpr3(yy)) goto l203;  yyDo(yy, yySet, -1, 0);  yyDo(yy, yy_1_expr4, yy->_begin, yy->_end);  goto l202;
  l203:;	  yy->_pos= yypos203; yy->_thunkpos= yythunkpos203;
  }  yyDo(yy, yy_2_expr4, yy->_begin, yy->_end);
  yyprintf((stderr, "  ok   %s @ %s\n", "expr4", yy->_buf+yy->_pos));  yyDo(yy, yyPop, 3, 0);
  return 1;
  l201:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "expr4", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrOP_PREC_6(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;
  yyprintf((stderr, "%s\n", "OP_PREC_6"));
  {  int yypos205= yy->_pos, yythunkpos205= yy->_thunkpos;
  {  int yypos207= yy->_pos, yythunkpos207= yy->_thunkpos;  if (!yymatchString(yy, "==")) goto l208;  goto l207;
  l208:;	  yy->_pos= yypos207; yy->_thunkpos= yythunkpos207;  if (!yymatchChar(yy, '=')) goto l206;
  }
  l207:;	  yyDo(yy, yy_1_OP_PREC_6, yy->_begin, yy->_end);  goto l205;
  l206:;	  yy->_pos= yypos205; yy->_thunkpos= yythunkpos205;
  {  int yypos210= yy->_pos, yythunkpos210= yy->_thunkpos;  if (!yymatchString(yy, "<>")) goto l211;  goto l210;
  l211:;	  yy->_pos= yypos210; yy->_thunkpos= yythunkpos210;  if (!yymatchString(yy, "!=")) goto l209;
  }
  l210:;	  yyDo(yy, yy_2_OP_PREC_6, yy->_begin, yy->_end);  goto l205;
  l209:;	  yy->_pos= yypos205; yy->_thunkpos= yythunkpos205;  if (!yyrIS(yy)) goto l212;  if (!yyrNOT(yy)) goto l212;  yyDo(yy, yy_3_OP_PREC_6, yy->_begin, yy->_end);  goto l205;
  l212:;	  yy->_pos= yypos205; yy->_thunkpos= yythunkpos205;  if (!yyrIS(yy)) goto l204;  yyDo(yy, yy_4_OP_PREC_6, yy->_begin, yy->_end);
  }
  l205:;	
  yyprintf((stderr, "  ok   %s @ %s\n", "OP_PREC_6", yy->_buf+yy->_pos));
  return 1;
  l204:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "OP_PREC_6", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrbetweenExpression(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;  yyDo(yy, yyPush, 4, 0);
  yyprintf((stderr, "%s\n", "betweenExpression"));  if (!yyrexpr5(yy)) goto l213;  yyDo(yy, yySet, -4, 0);
  {  int yypos214= yy->_pos, yythunkpos214= yy->_thunkpos;  if (!yyrNOT(yy)) goto l214;  yyDo(yy, yySet, -3, 0);  goto l215;
  l214:;	  yy->_pos= yypos214; yy->_thunkpos= yythunkpos214;
  }
  l215:;	  if (!yyrBETWEEN(yy)) goto l213;  if (!yyrexpr5(yy)) goto l213;  yyDo(yy, yySet, -2, 0);  if (!yyrAND(yy)) goto l213;  if (!yyrexpr5(yy)) goto l213;  yyDo(yy, yySet, -1, 0);  yyDo(yy, yy_1_betweenExpression, yy->_begin, yy->_end);
  yyprintf((stderr, "  ok   %s @ %s\n", "betweenExpression", yy->_buf+yy->_pos));  yyDo(yy, yyPop, 4, 0);
  return 1;
  l213:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "betweenExpression", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrlikeExpression(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;  yyDo(yy, yyPush, 3, 0);
  yyprintf((stderr, "%s\n", "likeExpression"));  if (!yyrexpr5(yy)) goto l216;  yyDo(yy, yySet, -3, 0);  if (!yyr_(yy)) goto l216;
  {  int yypos217= yy->_pos, yythunkpos217= yy->_thunkpos;  if (!yyrNOT(yy)) goto l217;  yyDo(yy, yySet, -2, 0);  goto l218;
  l217:;	  yy->_pos= yypos217; yy->_thunkpos= yythunkpos217;
  }
  l218:;	  if (!yyrLIKE(yy)) goto l216;  if (!yyrexpr5(yy)) goto l216;  yyDo(yy, yySet, -1, 0);  yyDo(yy, yy_1_likeExpression, yy->_begin, yy->_end);
  yyprintf((stderr, "  ok   %s @ %s\n", "likeExpression", yy->_buf+yy->_pos));  yyDo(yy, yyPop, 3, 0);
  return 1;
  l216:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "likeExpression", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrinExpression(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;  yyDo(yy, yyPush, 5, 0);
  yyprintf((stderr, "%s\n", "inExpression"));  if (!yyrexpr5(yy)) goto l219;  yyDo(yy, yySet, -5, 0);  if (!yyrIN_OR_NOT(yy)) goto l219;  yyDo(yy, yySet, -4, 0);
  {  int yypos220= yy->_pos, yythunkpos220= yy->_thunkpos;  if (!yyrselectExpr(yy)) goto l221;  yyDo(yy, yySet, -3, 0);  yyText(yy, yy->_begin, yy->_end);  {
#define yytext yy->_text
#define yyleng yy->_textlen
if (!(false)) goto l221;
#undef yytext
#undef yyleng
  }  goto l220;
  l221:;	  yy->_pos= yypos220; yy->_thunkpos= yythunkpos220;  if (!yyrparenExprs(yy)) goto l222;  yyDo(yy, yySet, -2, 0);  yyDo(yy, yy_1_inExpression, yy->_begin, yy->_end);  goto l220;
  l222:;	  yy->_pos= yypos220; yy->_thunkpos= yythunkpos220;  if (!yyrarrayLiteral(yy)) goto l219;  yyDo(yy, yySet, -1, 0);  yyDo(yy, yy_2_inExpression, yy->_begin, yy->_end);
  }
  l220:;	
  yyprintf((stderr, "  ok   %s @ %s\n", "inExpression", yy->_buf+yy->_pos));  yyDo(yy, yyPop, 5, 0);
  return 1;
  l219:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "inExpression", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrexpr5(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;  yyDo(yy, yyPush, 3, 0);
  yyprintf((stderr, "%s\n", "expr5"));  if (!yyrexpr4(yy)) goto l223;  yyDo(yy, yySet, -3, 0);
  l224:;	
  {  int yypos225= yy->_pos, yythunkpos225= yy->_thunkpos;  if (!yyr_(yy)) goto l225;  if (!yyrOP_PREC_5(yy)) goto l225;  yyDo(yy, yySet, -2, 0);  if (!yyr_(yy)) goto l225;  if (!yyrexpr4(yy)) goto l225;  yyDo(yy, yySet, -1, 0);  yyDo(yy, yy_1_expr5, yy->_begin, yy->_end);  goto l224;
  l225:;	  yy->_pos= yypos225; yy->_thunkpos= yythunkpos225;
  }  yyDo(yy, yy_2_expr5, yy->_begin, yy->_end);
  yyprintf((stderr, "  ok   %s @ %s\n", "expr5", yy->_buf+yy->_pos));  yyDo(yy, yyPop, 3, 0);
  return 1;
  l223:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "expr5", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrOP_PREC_7(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;
  yyprintf((stderr, "%s\n", "OP_PREC_7"));  if (!yyrAND(yy)) goto l226;  yyDo(yy, yy_1_OP_PREC_7, yy->_begin, yy->_end);
  yyprintf((stderr, "  ok   %s @ %s\n", "OP_PREC_7", yy->_buf+yy->_pos));
  return 1;
  l226:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "OP_PREC_7", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrexpr6(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;  yyDo(yy, yyPush, 3, 0);
  yyprintf((stderr, "%s\n", "expr6"));
  {  int yypos228= yy->_pos, yythunkpos228= yy->_thunkpos;  if (!yyrexpr5(yy)) goto l229;  yyDo(yy, yySet, -3, 0);  if (!yyrPOST_OP_PREC_6(yy)) goto l229;  yyDo(yy, yySet, -2, 0);  yyDo(yy, yy_1_expr6, yy->_begin, yy->_end);  goto l228;
  l229:;	  yy->_pos= yypos228; yy->_thunkpos= yythunkpos228;  if (!yyrinExpression(yy)) goto l230;  goto l228;
  l230:;	  yy->_pos= yypos228; yy->_thunkpos= yythunkpos228;  if (!yyrlikeExpression(yy)) goto l231;  goto l228;
  l231:;	  yy->_pos= yypos228; yy->_thunkpos= yythunkpos228;  if (!yyrbetweenExpression(yy)) goto l232;  goto l228;
  l232:;	  yy->_pos= yypos228; yy->_thunkpos= yythunkpos228;  if (!yyrexpr5(yy)) goto l227;  yyDo(yy, yySet, -3, 0);
  l233:;	
  {  int yypos234= yy->_pos, yythunkpos234= yy->_thunkpos;  if (!yyr_(yy)) goto l234;  if (!yyrOP_PREC_6(yy)) goto l234;  yyDo(yy, yySet, -2, 0);  if (!yyr_(yy)) goto l234;  if (!yyrexpr5(yy)) goto l234;  yyDo(yy, yySet, -1, 0);  yyDo(yy, yy_2_expr6, yy->_begin, yy->_end);  goto l233;
  l234:;	  yy->_pos= yypos234; yy->_thunkpos= yythunkpos234;
  }  yyDo(yy, yy_3_expr6, yy->_begin, yy->_end);
  }
  l228:;	
  yyprintf((stderr, "  ok   %s @ %s\n", "expr6", yy->_buf+yy->_pos));  yyDo(yy, yyPop, 3, 0);
  return 1;
  l227:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "expr6", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrOP_PREC_8(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;
  yyprintf((stderr, "%s\n", "OP_PREC_8"));  if (!yyrOR(yy)) goto l235;  yyDo(yy, yy_1_OP_PREC_8, yy->_begin, yy->_end);
  yyprintf((stderr, "  ok   %s @ %s\n", "OP_PREC_8", yy->_buf+yy->_pos));
  return 1;
  l235:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "OP_PREC_8", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrexpr7(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;  yyDo(yy, yyPush, 3, 0);
  yyprintf((stderr, "%s\n", "expr7"));  if (!yyrexpr6(yy)) goto l236;  yyDo(yy, yySet, -3, 0);
  l237:;	
  {  int yypos238= yy->_pos, yythunkpos238= yy->_thunkpos;  if (!yyr_(yy)) goto l238;  if (!yyrOP_PREC_7(yy)) goto l238;  yyDo(yy, yySet, -2, 0);  if (!yyr_(yy)) goto l238;  if (!yyrexpr6(yy)) goto l238;  yyDo(yy, yySet, -1, 0);  yyDo(yy, yy_1_expr7, yy->_begin, yy->_end);  goto l237;
  l238:;	  yy->_pos= yypos238; yy->_thunkpos= yythunkpos238;
  }  yyDo(yy, yy_2_expr7, yy->_begin, yy->_end);
  yyprintf((stderr, "  ok   %s @ %s\n", "expr7", yy->_buf+yy->_pos));  yyDo(yy, yyPop, 3, 0);
  return 1;
  l236:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "expr7", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrcollateSuffix(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;  yyDo(yy, yyPush, 2, 0);
  yyprintf((stderr, "%s\n", "collateSuffix"));  if (!yyrCOLLATE(yy)) goto l239;  yyDo(yy, yySet, -2, 0);  yyDo(yy, yy_1_collateSuffix, yy->_begin, yy->_end);
  {  int yypos240= yy->_pos, yythunkpos240= yy->_thunkpos;  if (!yyrcollation(yy)) goto l241;  yyDo(yy, yySet, -1, 0);  if (!yyr_(yy)) goto l241;
  {  int yypos242= yy->_pos, yythunkpos242= yy->_thunkpos;  int yymaxpos242= yy->_maxpos;  if (!yyrcollation(yy)) goto l242;  yy->_maxpos= yymaxpos242;  goto l241;
  l242:;	  yy->_pos= yypos242; yy->_thunkpos= yythunkpos242;  yy->_maxpos= yymaxpos242;
  }  yyDo(yy, yy_2_collateSuffix, yy->_begin, yy->_end);  goto l240;
  l241:;	  yy->_pos= yypos240; yy->_thunkpos= yythunkpos240;  if (!yymatchChar(yy, '(')) goto l239;  if (!yyr_(yy)) goto l239;  if (!yyrcollation(yy)) goto l239;  yyDo(yy, yySet, -1, 0);  if (!yyr_(yy)) goto l239;  yyDo(yy, yy_3_collateSuffix, yy->_begin, yy->_end);
  l243:;	
  {  int yypos244= yy->_pos, yythunkpos244= yy->_thunkpos;  if (!yyrcollation(yy)) goto l244;  yyDo(yy, yySet, -1, 0);  if (!yyr_(yy)) goto l244;  yyDo(yy, yy_3_collateSuffix, yy->_begin, yy->_end);  goto l243;
  l244:;	  yy->_pos= yypos244; yy->_thunkpos= yythunkpos244;
  }  if (!yymatchChar(yy, ')')) goto l239;  if (!yyr_(yy)) goto l239;
  }
  l240:;	  yyDo(yy, yy_4_collateSuffix, yy->_begin, yy->_end);
  yyprintf((stderr, "  ok   %s @ %s\n", "collateSuffix", yy->_buf+yy->_pos));  yyDo(yy, yyPop, 2, 0);
  return 1;
  l239:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "collateSuffix", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrexpr8(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;  yyDo(yy, yyPush, 3, 0);
  yyprintf((stderr, "%s\n", "expr8"));  if (!yyrexpr7(yy)) goto l245;  yyDo(yy, yySet, -3, 0);
  l246:;	
  {  int yypos247= yy->_pos, yythunkpos247= yy->_thunkpos;  if (!yyr_(yy)) goto l247;  if (!yyrOP_PREC_8(yy)) goto l247;  yyDo(yy, yySet, -2, 0);  if (!yyr_(yy)) goto l247;  if (!yyrexpr7(yy)) goto l247;  yyDo(yy, yySet, -1, 0);  yyDo(yy, yy_1_expr8, yy->_begin, yy->_end);  goto l246;
  l247:;	  yy->_pos= yypos247; yy->_thunkpos= yythunkpos247;
  }  yyDo(yy, yy_2_expr8, yy->_begin, yy->_end);
  yyprintf((stderr, "  ok   %s @ %s\n", "expr8", yy->_buf+yy->_pos));  yyDo(yy, yyPop, 3, 0);
  return 1;
  l245:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "expr8", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrVALUED(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;
  yyprintf((stderr, "%s\n", "VALUED"));  if (!yymatchIString(yy, "valued")) goto l248;  if (!yyrWB(yy)) goto l248;
  yyprintf((stderr, "  ok   %s @ %s\n", "VALUED", yy->_buf+yy->_pos));
  return 1;
  l248:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "VALUED", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrMISSING(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;
  yyprintf((stderr, "%s\n", "MISSING"));  if (!yymatchIString(yy, "missing")) goto l249;  if (!yyrWB(yy)) goto l249;
  yyprintf((stderr, "  ok   %s @ %s\n", "MISSING", yy->_buf+yy->_pos));
  return 1;
  l249:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "MISSING", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrIS(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;
  yyprintf((stderr, "%s\n", "IS"));  if (!yymatchIString(yy, "is")) goto l250;  if (!yyrWB(yy)) goto l250;
  yyprintf((stderr, "  ok   %s @ %s\n", "IS", yy->_buf+yy->_pos));
  return 1;
  l250:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "IS", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrNULL(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;
  yyprintf((stderr, "%s\n", "NULL"));  if (!yymatchIString(yy, "null")) goto l251;  if (!yyrWB(yy)) goto l251;
  yyprintf((stderr, "  ok   %s @ %s\n", "NULL", yy->_buf+yy->_pos));
  return 1;
  l251:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "NULL", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrNOT(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;
  yyprintf((stderr, "%s\n", "NOT"));  if (!yymatchIString(yy, "not")) goto l252;  if (!yyrWB(yy)) goto l252;
  yyprintf((stderr, "  ok   %s @ %s\n", "NOT", yy->_buf+yy->_pos));
  return 1;
  l252:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "NOT", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrPOST_OP_PREC_6(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;
  yyprintf((stderr, "%s\n", "POST_OP_PREC_6"));
  {  int yypos254= yy->_pos, yythunkpos254= yy->_thunkpos;  if (!yyrNOT(yy)) goto l255;  if (!yyrNULL(yy)) goto l255;  yyDo(yy, yy_1_POST_OP_PREC_6, yy->_begin, yy->_end);  goto l254;
  l255:;	  yy->_pos= yypos254; yy->_thunkpos= yythunkpos254;  if (!yyrIS(yy)) goto l256;  if (!yyrNULL(yy)) goto l256;  yyDo(yy, yy_2_POST_OP_PREC_6, yy->_begin, yy->_end);  goto l254;
  l256:;	  yy->_pos= yypos254; yy->_thunkpos= yythunkpos254;  if (!yyrIS(yy)) goto l257;  if (!yyrMISSING(yy)) goto l257;  yyDo(yy, yy_3_POST_OP_PREC_6, yy->_begin, yy->_end);  goto l254;
  l257:;	  yy->_pos= yypos254; yy->_thunkpos= yythunkpos254;  if (!yyrIS(yy)) goto l258;  if (!yyrVALUED(yy)) goto l258;  yyDo(yy, yy_4_POST_OP_PREC_6, yy->_begin, yy->_end);  goto l254;
  l258:;	  yy->_pos= yypos254; yy->_thunkpos= yythunkpos254;  if (!yyrIS(yy)) goto l259;  if (!yyrNOT(yy)) goto l259;  if (!yyrNULL(yy)) goto l259;  yyDo(yy, yy_5_POST_OP_PREC_6, yy->_begin, yy->_end);  goto l254;
  l259:;	  yy->_pos= yypos254; yy->_thunkpos= yythunkpos254;  if (!yyrIS(yy)) goto l260;  if (!yyrNOT(yy)) goto l260;  if (!yyrMISSING(yy)) goto l260;  yyDo(yy, yy_6_POST_OP_PREC_6, yy->_begin, yy->_end);  goto l254;
  l260:;	  yy->_pos= yypos254; yy->_thunkpos= yythunkpos254;  if (!yyrIS(yy)) goto l253;  if (!yyrNOT(yy)) goto l253;  if (!yyrVALUED(yy)) goto l253;  yyDo(yy, yy_7_POST_OP_PREC_6, yy->_begin, yy->_end);
  }
  l254:;	
  yyprintf((stderr, "  ok   %s @ %s\n", "POST_OP_PREC_6", yy->_buf+yy->_pos));
  return 1;
  l253:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "POST_OP_PREC_6", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrSOME(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;
  yyprintf((stderr, "%s\n", "SOME"));  if (!yymatchIString(yy, "some")) goto l261;  if (!yyrWB(yy)) goto l261;
  yyprintf((stderr, "  ok   %s @ %s\n", "SOME", yy->_buf+yy->_pos));
  return 1;
  l261:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "SOME", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrANY(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;
  yyprintf((stderr, "%s\n", "ANY"));  if (!yymatchIString(yy, "any")) goto l262;  if (!yyrWB(yy)) goto l262;
  yyprintf((stderr, "  ok   %s @ %s\n", "ANY", yy->_buf+yy->_pos));
  return 1;
  l262:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "ANY", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrEVERY(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;
  yyprintf((stderr, "%s\n", "EVERY"));  if (!yymatchIString(yy, "every")) goto l263;  if (!yyrWB(yy)) goto l263;
  yyprintf((stderr, "  ok   %s @ %s\n", "EVERY", yy->_buf+yy->_pos));
  return 1;
  l263:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "EVERY", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrAND(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;
  yyprintf((stderr, "%s\n", "AND"));  if (!yymatchIString(yy, "and")) goto l264;  if (!yyrWB(yy)) goto l264;
  yyprintf((stderr, "  ok   %s @ %s\n", "AND", yy->_buf+yy->_pos));
  return 1;
  l264:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "AND", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyranyOrSome(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;
  yyprintf((stderr, "%s\n", "anyOrSome"));
  {  int yypos266= yy->_pos, yythunkpos266= yy->_thunkpos;  if (!yyrANY(yy)) goto l267;  goto l266;
  l267:;	  yy->_pos= yypos266; yy->_thunkpos= yythunkpos266;  if (!yyrSOME(yy)) goto l265;
  }
  l266:;	
  yyprintf((stderr, "  ok   %s @ %s\n", "anyOrSome", yy->_buf+yy->_pos));
  return 1;
  l265:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "anyOrSome", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrSATISFIES(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;
  yyprintf((stderr, "%s\n", "SATISFIES"));  if (!yymatchIString(yy, "satisfies")) goto l268;  if (!yyrWB(yy)) goto l268;
  yyprintf((stderr, "  ok   %s @ %s\n", "SATISFIES", yy->_buf+yy->_pos));
  return 1;
  l268:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "SATISFIES", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrIN(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;
  yyprintf((stderr, "%s\n", "IN"));  if (!yymatchIString(yy, "in")) goto l269;  if (!yyrWB(yy)) goto l269;
  yyprintf((stderr, "  ok   %s @ %s\n", "IN", yy->_buf+yy->_pos));
  return 1;
  l269:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "IN", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrvariableName(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;
  yyprintf((stderr, "%s\n", "variableName"));  if (!yyrIDENTIFIER(yy)) goto l270;
  yyprintf((stderr, "  ok   %s @ %s\n", "variableName", yy->_buf+yy->_pos));
  return 1;
  l270:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "variableName", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyranyEvery(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;
  yyprintf((stderr, "%s\n", "anyEvery"));
  {  int yypos272= yy->_pos, yythunkpos272= yy->_thunkpos;  if (!yyranyOrSome(yy)) goto l273;  if (!yyrAND(yy)) goto l273;  if (!yyrEVERY(yy)) goto l273;  yyDo(yy, yy_1_anyEvery, yy->_begin, yy->_end);  goto l272;
  l273:;	  yy->_pos= yypos272; yy->_thunkpos= yythunkpos272;  if (!yyranyOrSome(yy)) goto l274;  yyDo(yy, yy_2_anyEvery, yy->_begin, yy->_end);  goto l272;
  l274:;	  yy->_pos= yypos272; yy->_thunkpos= yythunkpos272;  if (!yyrEVERY(yy)) goto l271;  yyDo(yy, yy_3_anyEvery, yy->_begin, yy->_end);
  }
  l272:;	
  yyprintf((stderr, "  ok   %s @ %s\n", "anyEvery", yy->_buf+yy->_pos));
  return 1;
  l271:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "anyEvery", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyranyEveryExpression(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;  yyDo(yy, yyPush, 4, 0);
  yyprintf((stderr, "%s\n", "anyEveryExpression"));  if (!yyranyEvery(yy)) goto l275;  yyDo(yy, yySet, -4, 0);  if (!yyr_(yy)) goto l275;  if (!yyrvariableName(yy)) goto l275;  yyDo(yy, yySet, -3, 0);  if (!yyr_(yy)) goto l275;  if (!yyrIN(yy)) goto l275;  if (!yyr_(yy)) goto l275;  if (!yyrexpression(yy)) goto l275;  yyDo(yy, yySet, -2, 0);  if (!yyr_(yy)) goto l275;  if (!yyrSATISFIES(yy)) goto l275;  if (!yyr_(yy)) goto l275;  if (!yyrexpression(yy)) goto l275;  yyDo(yy, yySet, -1, 0);  if (!yyrEND(yy)) goto l275;  yyDo(yy, yy_1_anyEveryExpression, yy->_begin, yy->_end);
  yyprintf((stderr, "  ok   %s @ %s\n", "anyEveryExpression", yy->_buf+yy->_pos));  yyDo(yy, yyPop, 4, 0);
  return 1;
  l275:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "anyEveryExpression", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrEND(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;
  yyprintf((stderr, "%s\n", "END"));  if (!yymatchIString(yy, "end")) goto l276;  if (!yyrWB(yy)) goto l276;
  yyprintf((stderr, "  ok   %s @ %s\n", "END", yy->_buf+yy->_pos));
  return 1;
  l276:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "END", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrELSE(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;
  yyprintf((stderr, "%s\n", "ELSE"));  if (!yymatchIString(yy, "else")) goto l277;  if (!yyrWB(yy)) goto l277;
  yyprintf((stderr, "  ok   %s @ %s\n", "ELSE", yy->_buf+yy->_pos));
  return 1;
  l277:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "ELSE", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrTHEN(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;
  yyprintf((stderr, "%s\n", "THEN"));  if (!yymatchIString(yy, "then")) goto l278;  if (!yyrWB(yy)) goto l278;
  yyprintf((stderr, "  ok   %s @ %s\n", "THEN", yy->_buf+yy->_pos));
  return 1;
  l278:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "THEN", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrWHEN(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;
  yyprintf((stderr, "%s\n", "WHEN"));  if (!yymatchIString(yy, "when")) goto l279;  if (!yyrWB(yy)) goto l279;
  yyprintf((stderr, "  ok   %s @ %s\n", "WHEN", yy->_buf+yy->_pos));
  return 1;
  l279:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "WHEN", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrCASE(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;
  yyprintf((stderr, "%s\n", "CASE"));  if (!yymatchIString(yy, "case")) goto l280;  if (!yyrWB(yy)) goto l280;
  yyprintf((stderr, "  ok   %s @ %s\n", "CASE", yy->_buf+yy->_pos));
  return 1;
  l280:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "CASE", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrcaseExpression(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;  yyDo(yy, yyPush, 4, 0);
  yyprintf((stderr, "%s\n", "caseExpression"));  if (!yyrCASE(yy)) goto l281;
  {  int yypos282= yy->_pos, yythunkpos282= yy->_thunkpos;
  {  int yypos284= yy->_pos, yythunkpos284= yy->_thunkpos;  int yymaxpos284= yy->_maxpos;  if (!yyrWHEN(yy)) goto l284;  yy->_maxpos= yymaxpos284;  goto l282;
  l284:;	  yy->_pos= yypos284; yy->_thunkpos= yythunkpos284;  yy->_maxpos= yymaxpos284;
  }  if (!yyrexpression(yy)) goto l282;  yyDo(yy, yySet, -4, 0);  goto l283;
  l282:;	  yy->_pos= yypos282; yy->_thunkpos= yythunkpos282;
  }
  l283:;	  yyDo(yy, yy_1_caseExpression, yy->_begin, yy->_end);  if (!yyrWHEN(yy)) goto l281;  if (!yyrexpression(yy)) goto l281;  yyDo(yy, yySet, -3, 0);  if (!yyrTHEN(yy)) goto l281;  if (!yyrexpression(yy)) goto l281;  yyDo(yy, yySet, -2, 0);  yyDo(yy, yy_2_caseExpression, yy->_begin, yy->_end);
  l285:;	
  {  int yypos286= yy->_pos, yythunkpos286= yy->_thunkpos;  if (!yyrWHEN(yy)) goto l286;  if (!yyrexpression(yy)) goto l286;  yyDo(yy, yySet, -3, 0);  if (!yyrTHEN(yy)) goto l286;  if (!yyrexpression(yy)) goto l286;  yyDo(yy, yySet, -2, 0);  yyDo(yy, yy_2_caseExpression, yy->_begin, yy->_end);  goto l285;
  l286:;	  yy->_pos= yypos286; yy->_thunkpos= yythunkpos286;
  }
  {  int yypos287= yy->_pos, yythunkpos287= yy->_thunkpos;  if (!yyrELSE(yy)) goto l287;  if (!yyrexpression(yy)) goto l287;  yyDo(yy, yySet, -1, 0);  yyDo(yy, yy_3_caseExpression, yy->_begin, yy->_end);  goto l288;
  l287:;	  yy->_pos= yypos287; yy->_thunkpos= yythunkpos287;
  }
  l288:;	  if (!yyrEND(yy)) goto l281;  yyDo(yy, yy_4_caseExpression, yy->_begin, yy->_end);
  yyprintf((stderr, "  ok   %s @ %s\n", "caseExpression", yy->_buf+yy->_pos));  yyDo(yy, yyPop, 4, 0);
  return 1;
  l281:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "caseExpression", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrexpr9(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;  yyDo(yy, yyPush, 2, 0);
  yyprintf((stderr, "%s\n", "expr9"));  if (!yyrexpr8(yy)) goto l289;  yyDo(yy, yySet, -2, 0);
  {  int yypos290= yy->_pos, yythunkpos290= yy->_thunkpos;  if (!yyr_(yy)) goto l290;  if (!yyrcollateSuffix(yy)) goto l290;  yyDo(yy, yySet, -1, 0);  yyDo(yy, yy_1_expr9, yy->_begin, yy->_end);  goto l291;
  l290:;	  yy->_pos= yypos290; yy->_thunkpos= yythunkpos290;
  }
  l291:;	  yyDo(yy, yy_2_expr9, yy->_begin, yy->_end);
  yyprintf((stderr, "  ok   %s @ %s\n", "expr9", yy->_buf+yy->_pos));  yyDo(yy, yyPop, 2, 0);
  return 1;
  l289:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "expr9", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrindexName(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;
  yyprintf((stderr, "%s\n", "indexName"));  if (!yyrIDENTIFIER(yy)) goto l292;
  yyprintf((stderr, "  ok   %s @ %s\n", "indexName", yy->_buf+yy->_pos));
  return 1;
  l292:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "indexName", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrDESC(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;
  yyprintf((stderr, "%s\n", "DESC"));  if (!yymatchIString(yy, "desc")) goto l293;  if (!yyrWB(yy)) goto l293;
  yyprintf((stderr, "  ok   %s @ %s\n", "DESC", yy->_buf+yy->_pos));
  return 1;
  l293:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "DESC", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrASC(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;
  yyprintf((stderr, "%s\n", "ASC"));  if (!yymatchIString(yy, "asc")) goto l294;  if (!yyrWB(yy)) goto l294;
  yyprintf((stderr, "  ok   %s @ %s\n", "ASC", yy->_buf+yy->_pos));
  return 1;
  l294:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "ASC", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrorder(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;
  yyprintf((stderr, "%s\n", "order"));  yyText(yy, yy->_begin, yy->_end);  {
#define yytext yy->_text
#define yyleng yy->_textlen
if (!(YY_BEGIN)) goto l295;
#undef yytext
#undef yyleng
  }
  {  int yypos296= yy->_pos, yythunkpos296= yy->_thunkpos;  if (!yyrASC(yy)) goto l297;  goto l296;
  l297:;	  yy->_pos= yypos296; yy->_thunkpos= yythunkpos296;  if (!yyrDESC(yy)) goto l295;
  }
  l296:;	  yyText(yy, yy->_begin, yy->_end);  {
#define yytext yy->_text
#define yyleng yy->_textlen
if (!(YY_END)) goto l295;
#undef yytext
#undef yyleng
  }  yyDo(yy, yy_1_order, yy->_begin, yy->_end);
  yyprintf((stderr, "  ok   %s @ %s\n", "order", yy->_buf+yy->_pos));
  return 1;
  l295:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "order", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrordering(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;  yyDo(yy, yyPush, 2, 0);
  yyprintf((stderr, "%s\n", "ordering"));  if (!yyrexpression(yy)) goto l298;  yyDo(yy, yySet, -2, 0);
  {  int yypos299= yy->_pos, yythunkpos299= yy->_thunkpos;  if (!yyr_(yy)) goto l299;  if (!yyrorder(yy)) goto l299;  yyDo(yy, yySet, -1, 0);  yyDo(yy, yy_1_ordering, yy->_begin, yy->_end);  goto l300;
  l299:;	  yy->_pos= yypos299; yy->_thunkpos= yythunkpos299;
  }
  l300:;	  yyDo(yy, yy_2_ordering, yy->_begin, yy->_end);
  yyprintf((stderr, "  ok   %s @ %s\n", "ordering", yy->_buf+yy->_pos));  yyDo(yy, yyPop, 2, 0);
  return 1;
  l298:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "ordering", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrORDER(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;
  yyprintf((stderr, "%s\n", "ORDER"));  if (!yymatchIString(yy, "order")) goto l301;  if (!yyrWB(yy)) goto l301;
  yyprintf((stderr, "  ok   %s @ %s\n", "ORDER", yy->_buf+yy->_pos));
  return 1;
  l301:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "ORDER", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrHAVING(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;
  yyprintf((stderr, "%s\n", "HAVING"));  if (!yymatchIString(yy, "having")) goto l302;  if (!yyrWB(yy)) goto l302;
  yyprintf((stderr, "  ok   %s @ %s\n", "HAVING", yy->_buf+yy->_pos));
  return 1;
  l302:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "HAVING", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrBY(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;
  yyprintf((stderr, "%s\n", "BY"));  if (!yymatchIString(yy, "by")) goto l303;  if (!yyrWB(yy)) goto l303;
  yyprintf((stderr, "  ok   %s @ %s\n", "BY", yy->_buf+yy->_pos));
  return 1;
  l303:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "BY", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrGROUP(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;
  yyprintf((stderr, "%s\n", "GROUP"));  if (!yymatchIString(yy, "group")) goto l304;  if (!yyrWB(yy)) goto l304;
  yyprintf((stderr, "  ok   %s @ %s\n", "GROUP", yy->_buf+yy->_pos));
  return 1;
  l304:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "GROUP", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrpropertyPath(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;  yyDo(yy, yyPush, 3, 0);
  yyprintf((stderr, "%s\n", "propertyPath"));  if (!yyrpropertyName(yy)) goto l305;  yyDo(yy, yySet, -3, 0);  yyDo(yy, yy_1_propertyPath, yy->_begin, yy->_end);
  l306:;	
  {  int yypos307= yy->_pos, yythunkpos307= yy->_thunkpos;
  {  int yypos308= yy->_pos, yythunkpos308= yy->_thunkpos;  if (!yymatchChar(yy, '.')) goto l309;  if (!yyr_(yy)) goto l309;  if (!yyrpropertyName(yy)) goto l309;  yyDo(yy, yySet, -2, 0);  yyDo(yy, yy_2_propertyPath, yy->_begin, yy->_end);  goto l308;
  l309:;	  yy->_pos= yypos308; yy->_thunkpos= yythunkpos308;  if (!yymatchChar(yy, '[')) goto l307;  if (!yyr_(yy)) goto l307;  if (!yyrINT_LITERAL(yy)) goto l307;  yyDo(yy, yySet, -1, 0);  if (!yyr_(yy)) goto l307;  if (!yymatchChar(yy, ']')) goto l307;  if (!yyr_(yy)) goto l307;  yyDo(yy, yy_3_propertyPath, yy->_begin, yy->_end);
  }
  l308:;	  goto l306;
  l307:;	  yy->_pos= yypos307; yy->_thunkpos= yythunkpos307;
  }  yyDo(yy, yy_4_propertyPath, yy->_begin, yy->_end);
  yyprintf((stderr, "  ok   %s @ %s\n", "propertyPath", yy->_buf+yy->_pos));  yyDo(yy, yyPop, 3, 0);
  return 1;
  l305:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "propertyPath", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrUNNEST(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;
  yyprintf((stderr, "%s\n", "UNNEST"));  if (!yymatchIString(yy, "unnest")) goto l310;  if (!yyrWB(yy)) goto l310;
  yyprintf((stderr, "  ok   %s @ %s\n", "UNNEST", yy->_buf+yy->_pos));
  return 1;
  l310:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "UNNEST", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrJOIN(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;
  yyprintf((stderr, "%s\n", "JOIN"));  if (!yymatchIString(yy, "join")) goto l311;  if (!yyrWB(yy)) goto l311;
  yyprintf((stderr, "  ok   %s @ %s\n", "JOIN", yy->_buf+yy->_pos));
  return 1;
  l311:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "JOIN", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrCROSS(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;
  yyprintf((stderr, "%s\n", "CROSS"));  if (!yymatchIString(yy, "cross")) goto l312;  if (!yyrWB(yy)) goto l312;
  yyprintf((stderr, "  ok   %s @ %s\n", "CROSS", yy->_buf+yy->_pos));
  return 1;
  l312:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "CROSS", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrINNER(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;
  yyprintf((stderr, "%s\n", "INNER"));  if (!yymatchIString(yy, "inner")) goto l313;  if (!yyrWB(yy)) goto l313;
  yyprintf((stderr, "  ok   %s @ %s\n", "INNER", yy->_buf+yy->_pos));
  return 1;
  l313:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "INNER", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrOUTER(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;
  yyprintf((stderr, "%s\n", "OUTER"));  if (!yymatchIString(yy, "outer")) goto l314;  if (!yyrWB(yy)) goto l314;
  yyprintf((stderr, "  ok   %s @ %s\n", "OUTER", yy->_buf+yy->_pos));
  return 1;
  l314:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "OUTER", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrLEFT(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;
  yyprintf((stderr, "%s\n", "LEFT"));  if (!yymatchIString(yy, "left")) goto l315;  if (!yyrWB(yy)) goto l315;
  yyprintf((stderr, "  ok   %s @ %s\n", "LEFT", yy->_buf+yy->_pos));
  return 1;
  l315:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "LEFT", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrON(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;
  yyprintf((stderr, "%s\n", "ON"));  if (!yymatchIString(yy, "on")) goto l316;  if (!yyrWB(yy)) goto l316;
  yyprintf((stderr, "  ok   %s @ %s\n", "ON", yy->_buf+yy->_pos));
  return 1;
  l316:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "ON", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrjoinOperator(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;
  yyprintf((stderr, "%s\n", "joinOperator"));  yyText(yy, yy->_begin, yy->_end);  {
#define yytext yy->_text
#define yyleng yy->_textlen
if (!(YY_BEGIN)) goto l317;
#undef yytext
#undef yyleng
  }
  {  int yypos318= yy->_pos, yythunkpos318= yy->_thunkpos;
  {  int yypos320= yy->_pos, yythunkpos320= yy->_thunkpos;  if (!yyrLEFT(yy)) goto l321;
  {  int yypos322= yy->_pos, yythunkpos322= yy->_thunkpos;  if (!yyrOUTER(yy)) goto l322;  goto l323;
  l322:;	  yy->_pos= yypos322; yy->_thunkpos= yythunkpos322;
  }
  l323:;	  goto l320;
  l321:;	  yy->_pos= yypos320; yy->_thunkpos= yythunkpos320;  if (!yyrINNER(yy)) goto l324;  goto l320;
  l324:;	  yy->_pos= yypos320; yy->_thunkpos= yythunkpos320;  if (!yyrCROSS(yy)) goto l318;
  }
  l320:;	  goto l319;
  l318:;	  yy->_pos= yypos318; yy->_thunkpos= yythunkpos318;
  }
  l319:;	  yyText(yy, yy->_begin, yy->_end);  {
#define yytext yy->_text
#define yyleng yy->_textlen
if (!(YY_END)) goto l317;
#undef yytext
#undef yyleng
  }  if (!yyrJOIN(yy)) goto l317;  yyDo(yy, yy_1_joinOperator, yy->_begin, yy->_end);
  yyprintf((stderr, "  ok   %s @ %s\n", "joinOperator", yy->_buf+yy->_pos));
  return 1;
  l317:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "joinOperator", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrIDENTIFIER(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;
  yyprintf((stderr, "%s\n", "IDENTIFIER"));
  {  int yypos326= yy->_pos, yythunkpos326= yy->_thunkpos;
  {  int yypos328= yy->_pos, yythunkpos328= yy->_thunkpos;  int yymaxpos328= yy->_maxpos;  if (!yyrreservedWord(yy)) goto l328;  yy->_maxpos= yymaxpos328;  goto l327;
  l328:;	  yy->_pos= yypos328; yy->_thunkpos= yythunkpos328;  yy->_maxpos= yymaxpos328;
  }  yyText(yy, yy->_begin, yy->_end);  {
#define yytext yy->_text
#define yyleng yy->_textlen
if (!(YY_BEGIN)) goto l327;
#undef yytext
#undef yyleng
  }  if (!yymatchClass(yy, (unsigned char *)"\000\000\000\000\000\000\000\000\376\377\377\207\376\377\377\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000")) goto l327;
  l329:;	
  {  int yypos330= yy->_pos, yythunkpos330= yy->_thunkpos;  if (!yymatchClass(yy, (unsigned char *)"\000\000\000\000\020\000\377\003\376\377\377\207\376\377\377\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000")) goto l330;  goto l329;
  l330:;	  yy->_pos= yypos330; yy->_thunkpos= yythunkpos330;
  }  yyText(yy, yy->_begin, yy->_end);  {
#define yytext yy->_text
#define yyleng yy->_textlen
if (!(YY_END)) goto l327;
#undef yytext
#undef yyleng
  }  if (!yyr_(yy)) goto l327;  yyDo(yy, yy_1_IDENTIFIER, yy->_begin, yy->_end);  goto l326;
  l327:;	  yy->_pos= yypos326; yy->_thunkpos= yythunkpos326;  if (!yymatchChar(yy, '`')) goto l325;  yyText(yy, yy->_begin, yy->_end);  {
#define yytext yy->_text
#define yyleng yy->_textlen
if (!(YY_BEGIN)) goto l325;
#undef yytext
#undef yyleng
  }
  l331:;	
  {  int yypos332= yy->_pos, yythunkpos332= yy->_thunkpos;
  {  int yypos333= yy->_pos, yythunkpos333= yy->_thunkpos;  if (!yymatchClass(yy, (unsigned char *)"\377\377\377\377\377\377\377\377\377\377\377\377\376\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377")) goto l334;  goto l333;
  l334:;	  yy->_pos= yypos333; yy->_thunkpos= yythunkpos333;  if (!yymatchString(yy, "``")) goto l332;
  }
  l333:;	  goto l331;
  l332:;	  yy->_pos= yypos332; yy->_thunkpos= yythunkpos332;
  }  yyText(yy, yy->_begin, yy->_end);  {
#define yytext yy->_text
#define yyleng yy->_textlen
if (!(YY_END)) goto l325;
#undef yytext
#undef yyleng
  }  if (!yymatchChar(yy, '`')) goto l325;  if (!yyr_(yy)) goto l325;  yyDo(yy, yy_2_IDENTIFIER, yy->_begin, yy->_end);
  }
  l326:;	
  yyprintf((stderr, "  ok   %s @ %s\n", "IDENTIFIER", yy->_buf+yy->_pos));
  return 1;
  l325:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "IDENTIFIER", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrcollectionAlias(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;
  yyprintf((stderr, "%s\n", "collectionAlias"));  if (!yyrIDENTIFIER(yy)) goto l335;
  yyprintf((stderr, "  ok   %s @ %s\n", "collectionAlias", yy->_buf+yy->_pos));
  return 1;
  l335:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "collectionAlias", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrcollectionName(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;  yyDo(yy, yyPush, 2, 0);
  yyprintf((stderr, "%s\n", "collectionName"));  if (!yyrIDENTIFIER(yy)) goto l336;  yyDo(yy, yySet, -2, 0);  yyDo(yy, yy_1_collectionName, yy->_begin, yy->_end);
  {  int yypos337= yy->_pos, yythunkpos337= yy->_thunkpos;  if (!yymatchChar(yy, '.')) goto l337;  if (!yyrIDENTIFIER(yy)) goto l337;  yyDo(yy, yySet, -1, 0);  yyDo(yy, yy_2_collectionName, yy->_begin, yy->_end);  goto l338;
  l337:;	  yy->_pos= yypos337; yy->_thunkpos= yythunkpos337;
  }
  l338:;	  yyDo(yy, yy_3_collectionName, yy->_begin, yy->_end);
  yyprintf((stderr, "  ok   %s @ %s\n", "collectionName", yy->_buf+yy->_pos));  yyDo(yy, yyPop, 2, 0);
  return 1;
  l336:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "collectionName", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrunnest(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;  yyDo(yy, yyPush, 2, 0);
  yyprintf((stderr, "%s\n", "unnest"));  if (!yyrUNNEST(yy)) goto l339;  if (!yyr_(yy)) goto l339;  if (!yyrpropertyPath(yy)) goto l339;  yyDo(yy, yySet, -2, 0);
  {  int yypos340= yy->_pos, yythunkpos340= yy->_thunkpos;  if (!yyr_(yy)) goto l340;
  {  int yypos342= yy->_pos, yythunkpos342= yy->_thunkpos;  if (!yyrAS(yy)) goto l342;  goto l343;
  l342:;	  yy->_pos= yypos342; yy->_thunkpos= yythunkpos342;
  }
  l343:;	  if (!yyrcolumnAlias(yy)) goto l340;  yyDo(yy, yySet, -1, 0);  goto l341;
  l340:;	  yy->_pos= yypos340; yy->_thunkpos= yythunkpos340;
  }
  l341:;	  yyDo(yy, yy_1_unnest, yy->_begin, yy->_end);
  yyprintf((stderr, "  ok   %s @ %s\n", "unnest", yy->_buf+yy->_pos));  yyDo(yy, yyPop, 2, 0);
  return 1;
  l339:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "unnest", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrjoin(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;  yyDo(yy, yyPush, 3, 0);
  yyprintf((stderr, "%s\n", "join"));  if (!yyrjoinOperator(yy)) goto l344;  yyDo(yy, yySet, -3, 0);  if (!yyr_(yy)) goto l344;  if (!yyrdataSource(yy)) goto l344;  yyDo(yy, yySet, -2, 0);  if (!yyr_(yy)) goto l344;  yyDo(yy, yy_1_join, yy->_begin, yy->_end);
  {  int yypos345= yy->_pos, yythunkpos345= yy->_thunkpos;  if (!yyrON(yy)) goto l345;  if (!yyrexpression(yy)) goto l345;  yyDo(yy, yySet, -1, 0);  yyDo(yy, yy_2_join, yy->_begin, yy->_end);  goto l346;
  l345:;	  yy->_pos= yypos345; yy->_thunkpos= yythunkpos345;
  }
  l346:;	  yyDo(yy, yy_3_join, yy->_begin, yy->_end);
  yyprintf((stderr, "  ok   %s @ %s\n", "join", yy->_buf+yy->_pos));  yyDo(yy, yyPop, 3, 0);
  return 1;
  l344:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "join", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrdataSource(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;  yyDo(yy, yyPush, 2, 0);
  yyprintf((stderr, "%s\n", "dataSource"));  if (!yyrcollectionName(yy)) goto l347;  yyDo(yy, yySet, -2, 0);  yyDo(yy, yy_1_dataSource, yy->_begin, yy->_end);
  {  int yypos348= yy->_pos, yythunkpos348= yy->_thunkpos;
  {  int yypos350= yy->_pos, yythunkpos350= yy->_thunkpos;  if (!yyrAS(yy)) goto l350;  goto l351;
  l350:;	  yy->_pos= yypos350; yy->_thunkpos= yythunkpos350;
  }
  l351:;	  if (!yyrcollectionAlias(yy)) goto l348;  yyDo(yy, yySet, -1, 0);  yyDo(yy, yy_2_dataSource, yy->_begin, yy->_end);  goto l349;
  l348:;	  yy->_pos= yypos348; yy->_thunkpos= yythunkpos348;
  }
  l349:;	  yyDo(yy, yy_3_dataSource, yy->_begin, yy->_end);
  yyprintf((stderr, "  ok   %s @ %s\n", "dataSource", yy->_buf+yy->_pos));  yyDo(yy, yyPop, 2, 0);
  return 1;
  l347:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "dataSource", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrFROM(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;
  yyprintf((stderr, "%s\n", "FROM"));  if (!yymatchIString(yy, "from")) goto l352;  if (!yyrWB(yy)) goto l352;
  yyprintf((stderr, "  ok   %s @ %s\n", "FROM", yy->_buf+yy->_pos));
  return 1;
  l352:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "FROM", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrcolumnAlias(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;
  yyprintf((stderr, "%s\n", "columnAlias"));  if (!yyrIDENTIFIER(yy)) goto l353;
  yyprintf((stderr, "  ok   %s @ %s\n", "columnAlias", yy->_buf+yy->_pos));
  return 1;
  l353:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "columnAlias", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrAS(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;
  yyprintf((stderr, "%s\n", "AS"));  if (!yymatchIString(yy, "as")) goto l354;  if (!yyrWB(yy)) goto l354;
  yyprintf((stderr, "  ok   %s @ %s\n", "AS", yy->_buf+yy->_pos));
  return 1;
  l354:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "AS", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrselectResult(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;  yyDo(yy, yyPush, 2, 0);
  yyprintf((stderr, "%s\n", "selectResult"));  if (!yyrexpression(yy)) goto l355;  yyDo(yy, yySet, -2, 0);
  {  int yypos356= yy->_pos, yythunkpos356= yy->_thunkpos;  if (!yyr_(yy)) goto l356;
  {  int yypos358= yy->_pos, yythunkpos358= yy->_thunkpos;  if (!yyrAS(yy)) goto l358;  goto l359;
  l358:;	  yy->_pos= yypos358; yy->_thunkpos= yythunkpos358;
  }
  l359:;	  if (!yyrcolumnAlias(yy)) goto l356;  yyDo(yy, yySet, -1, 0);  goto l357;
  l356:;	  yy->_pos= yypos356; yy->_thunkpos= yythunkpos356;
  }
  l357:;	  yyDo(yy, yy_1_selectResult, yy->_begin, yy->_end);
  yyprintf((stderr, "  ok   %s @ %s\n", "selectResult", yy->_buf+yy->_pos));  yyDo(yy, yyPop, 2, 0);
  return 1;
  l355:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "selectResult", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrOFFSET(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;
  yyprintf((stderr, "%s\n", "OFFSET"));  if (!yymatchIString(yy, "offset")) goto l360;  if (!yyrWB(yy)) goto l360;
  yyprintf((stderr, "  ok   %s @ %s\n", "OFFSET", yy->_buf+yy->_pos));
  return 1;
  l360:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "OFFSET", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrLIMIT(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;
  yyprintf((stderr, "%s\n", "LIMIT"));  if (!yymatchIString(yy, "limit")) goto l361;  if (!yyrWB(yy)) goto l361;
  yyprintf((stderr, "  ok   %s @ %s\n", "LIMIT", yy->_buf+yy->_pos));
  return 1;
  l361:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "LIMIT", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrorderBy(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;  yyDo(yy, yyPush, 2, 0);
  yyprintf((stderr, "%s\n", "orderBy"));  if (!yyrORDER(yy)) goto l362;  if (!yyrBY(yy)) goto l362;  if (!yyrordering(yy)) goto l362;  yyDo(yy, yySet, -2, 0);  yyDo(yy, yy_1_orderBy, yy->_begin, yy->_end);
  l363:;	
  {  int yypos364= yy->_pos, yythunkpos364= yy->_thunkpos;  if (!yyr_(yy)) goto l364;  if (!yymatchChar(yy, ',')) goto l364;  if (!yyr_(yy)) goto l364;  if (!yyrordering(yy)) goto l364;  yyDo(yy, yySet, -1, 0);  yyDo(yy, yy_2_orderBy, yy->_begin, yy->_end);  goto l363;
  l364:;	  yy->_pos= yypos364; yy->_thunkpos= yythunkpos364;
  }  yyDo(yy, yy_3_orderBy, yy->_begin, yy->_end);
  yyprintf((stderr, "  ok   %s @ %s\n", "orderBy", yy->_buf+yy->_pos));  yyDo(yy, yyPop, 2, 0);
  return 1;
  l362:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "orderBy", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrhaving(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;
  yyprintf((stderr, "%s\n", "having"));  if (!yyrHAVING(yy)) goto l365;  if (!yyrexpression(yy)) goto l365;
  yyprintf((stderr, "  ok   %s @ %s\n", "having", yy->_buf+yy->_pos));
  return 1;
  l365:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "having", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrgroupBy(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;  yyDo(yy, yyPush, 2, 0);
  yyprintf((stderr, "%s\n", "groupBy"));  if (!yyrGROUP(yy)) goto l366;  if (!yyrBY(yy)) goto l366;  if (!yyrexpression(yy)) goto l366;  yyDo(yy, yySet, -2, 0);  yyDo(yy, yy_1_groupBy, yy->_begin, yy->_end);
  l367:;	
  {  int yypos368= yy->_pos, yythunkpos368= yy->_thunkpos;  if (!yyr_(yy)) goto l368;  if (!yymatchChar(yy, ',')) goto l368;  if (!yyr_(yy)) goto l368;  if (!yyrexpression(yy)) goto l368;  yyDo(yy, yySet, -1, 0);  yyDo(yy, yy_2_groupBy, yy->_begin, yy->_end);  goto l367;
  l368:;	  yy->_pos= yypos368; yy->_thunkpos= yythunkpos368;
  }  yyDo(yy, yy_3_groupBy, yy->_begin, yy->_end);
  yyprintf((stderr, "  ok   %s @ %s\n", "groupBy", yy->_buf+yy->_pos));  yyDo(yy, yyPop, 2, 0);
  return 1;
  l366:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "groupBy", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrexpression(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;  yyDo(yy, yyPush, 1, 0);
  yyprintf((stderr, "%s\n", "expression"));
  {  int yypos370= yy->_pos, yythunkpos370= yy->_thunkpos;  if (!yymatchChar(yy, '(')) goto l371;  if (!yyr_(yy)) goto l371;  if (!yymatchChar(yy, '(')) goto l371;  if (!yyr_(yy)) goto l371;  if (!yyrexpression(yy)) goto l371;  yyDo(yy, yySet, -1, 0);  if (!yyr_(yy)) goto l371;  if (!yymatchChar(yy, ')')) goto l371;  if (!yyr_(yy)) goto l371;  if (!yymatchChar(yy, ')')) goto l371;  yyDo(yy, yy_1_expression, yy->_begin, yy->_end);  goto l370;
  l371:;	  yy->_pos= yypos370; yy->_thunkpos= yythunkpos370;  if (!yyrexpr9(yy)) goto l369;
  }
  l370:;	
  yyprintf((stderr, "  ok   %s @ %s\n", "expression", yy->_buf+yy->_pos));  yyDo(yy, yyPop, 1, 0);
  return 1;
  l369:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "expression", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrWHERE(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;
  yyprintf((stderr, "%s\n", "WHERE"));  if (!yymatchIString(yy, "where")) goto l372;  if (!yyrWB(yy)) goto l372;
  yyprintf((stderr, "  ok   %s @ %s\n", "WHERE", yy->_buf+yy->_pos));
  return 1;
  l372:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "WHERE", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrfrom(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;  yyDo(yy, yyPush, 3, 0);
  yyprintf((stderr, "%s\n", "from"));  if (!yyrFROM(yy)) goto l373;  if (!yyrdataSource(yy)) goto l373;  yyDo(yy, yySet, -3, 0);  yyDo(yy, yy_1_from, yy->_begin, yy->_end);
  l374:;	
  {  int yypos375= yy->_pos, yythunkpos375= yy->_thunkpos;  if (!yyr_(yy)) goto l375;
  {  int yypos376= yy->_pos, yythunkpos376= yy->_thunkpos;  if (!yyrjoin(yy)) goto l377;  yyDo(yy, yySet, -2, 0);  yyDo(yy, yy_2_from, yy->_begin, yy->_end);  goto l376;
  l377:;	  yy->_pos= yypos376; yy->_thunkpos= yythunkpos376;  if (!yyrunnest(yy)) goto l375;  yyDo(yy, yySet, -1, 0);  yyDo(yy, yy_3_from, yy->_begin, yy->_end);
  }
  l376:;	  goto l374;
  l375:;	  yy->_pos= yypos375; yy->_thunkpos= yythunkpos375;
  }  yyDo(yy, yy_4_from, yy->_begin, yy->_end);
  yyprintf((stderr, "  ok   %s @ %s\n", "from", yy->_buf+yy->_pos));  yyDo(yy, yyPop, 3, 0);
  return 1;
  l373:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "from", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrALL(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;
  yyprintf((stderr, "%s\n", "ALL"));  if (!yymatchIString(yy, "all")) goto l378;  if (!yyrWB(yy)) goto l378;
  yyprintf((stderr, "  ok   %s @ %s\n", "ALL", yy->_buf+yy->_pos));
  return 1;
  l378:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "ALL", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrDISTINCT(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;
  yyprintf((stderr, "%s\n", "DISTINCT"));  if (!yymatchIString(yy, "distinct")) goto l379;  if (!yyrWB(yy)) goto l379;
  yyprintf((stderr, "  ok   %s @ %s\n", "DISTINCT", yy->_buf+yy->_pos));
  return 1;
  l379:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "DISTINCT", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrSELECT(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;
  yyprintf((stderr, "%s\n", "SELECT"));  if (!yymatchIString(yy, "select")) goto l380;  if (!yyrWB(yy)) goto l380;
  yyprintf((stderr, "  ok   %s @ %s\n", "SELECT", yy->_buf+yy->_pos));
  return 1;
  l380:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "SELECT", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrselectResults(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;  yyDo(yy, yyPush, 2, 0);
  yyprintf((stderr, "%s\n", "selectResults"));  if (!yyrselectResult(yy)) goto l381;  yyDo(yy, yySet, -2, 0);  yyDo(yy, yy_1_selectResults, yy->_begin, yy->_end);
  l382:;	
  {  int yypos383= yy->_pos, yythunkpos383= yy->_thunkpos;  if (!yyr_(yy)) goto l383;  if (!yymatchChar(yy, ',')) goto l383;  if (!yyr_(yy)) goto l383;  if (!yyrselectResult(yy)) goto l383;  yyDo(yy, yySet, -1, 0);  yyDo(yy, yy_2_selectResults, yy->_begin, yy->_end);  goto l382;
  l383:;	  yy->_pos= yypos383; yy->_thunkpos= yythunkpos383;
  }  yyDo(yy, yy_3_selectResults, yy->_begin, yy->_end);
  yyprintf((stderr, "  ok   %s @ %s\n", "selectResults", yy->_buf+yy->_pos));  yyDo(yy, yyPop, 2, 0);
  return 1;
  l381:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "selectResults", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyrselectStatement(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;  yyDo(yy, yyPush, 10, 0);
  yyprintf((stderr, "%s\n", "selectStatement"));  if (!yyrSELECT(yy)) goto l384;  yyDo(yy, yySet, -10, 0);  if (!yyr_(yy)) goto l384;  yyDo(yy, yy_1_selectStatement, yy->_begin, yy->_end);
  {  int yypos385= yy->_pos, yythunkpos385= yy->_thunkpos;
  {  int yypos387= yy->_pos, yythunkpos387= yy->_thunkpos;  if (!yyrDISTINCT(yy)) goto l388;  yyDo(yy, yySet, -9, 0);  yyDo(yy, yy_2_selectStatement, yy->_begin, yy->_end);  goto l387;
  l388:;	  yy->_pos= yypos387; yy->_thunkpos= yythunkpos387;  if (!yyrALL(yy)) goto l385;
  }
  l387:;	  goto l386;
  l385:;	  yy->_pos= yypos385; yy->_thunkpos= yythunkpos385;
  }
  l386:;	  if (!yyrselectResults(yy)) goto l384;  yyDo(yy, yySet, -8, 0);  if (!yyr_(yy)) goto l384;  yyDo(yy, yy_3_selectStatement, yy->_begin, yy->_end);
  {  int yypos389= yy->_pos, yythunkpos389= yy->_thunkpos;  if (!yyrfrom(yy)) goto l389;  yyDo(yy, yySet, -7, 0);  if (!yyr_(yy)) goto l389;  yyDo(yy, yy_4_selectStatement, yy->_begin, yy->_end);  goto l390;
  l389:;	  yy->_pos= yypos389; yy->_thunkpos= yythunkpos389;
  }
  l390:;	
  {  int yypos391= yy->_pos, yythunkpos391= yy->_thunkpos;  if (!yyrWHERE(yy)) goto l391;  if (!yyrexpression(yy)) goto l391;  yyDo(yy, yySet, -6, 0);  yyDo(yy, yy_5_selectStatement, yy->_begin, yy->_end);  goto l392;
  l391:;	  yy->_pos= yypos391; yy->_thunkpos= yythunkpos391;
  }
  l392:;	
  {  int yypos393= yy->_pos, yythunkpos393= yy->_thunkpos;  if (!yyrgroupBy(yy)) goto l393;  yyDo(yy, yySet, -5, 0);  if (!yyr_(yy)) goto l393;  yyDo(yy, yy_6_selectStatement, yy->_begin, yy->_end);
  {  int yypos395= yy->_pos, yythunkpos395= yy->_thunkpos;  if (!yyrhaving(yy)) goto l395;  yyDo(yy, yySet, -4, 0);  yyDo(yy, yy_7_selectStatement, yy->_begin, yy->_end);  goto l396;
  l395:;	  yy->_pos= yypos395; yy->_thunkpos= yythunkpos395;
  }
  l396:;	  goto l394;
  l393:;	  yy->_pos= yypos393; yy->_thunkpos= yythunkpos393;
  }
  l394:;	
  {  int yypos397= yy->_pos, yythunkpos397= yy->_thunkpos;  if (!yyrorderBy(yy)) goto l397;  yyDo(yy, yySet, -3, 0);  if (!yyr_(yy)) goto l397;  yyDo(yy, yy_8_selectStatement, yy->_begin, yy->_end);  goto l398;
  l397:;	  yy->_pos= yypos397; yy->_thunkpos= yythunkpos397;
  }
  l398:;	
  {  int yypos399= yy->_pos, yythunkpos399= yy->_thunkpos;
  {  int yypos401= yy->_pos, yythunkpos401= yy->_thunkpos;  if (!yyrLIMIT(yy)) goto l402;  if (!yyrexpression(yy)) goto l402;  yyDo(yy, yySet, -2, 0);  yyDo(yy, yy_9_selectStatement, yy->_begin, yy->_end);
  {  int yypos403= yy->_pos, yythunkpos403= yy->_thunkpos;  if (!yyrOFFSET(yy)) goto l403;  if (!yyrexpression(yy)) goto l403;  yyDo(yy, yySet, -1, 0);  yyDo(yy, yy_10_selectStatement, yy->_begin, yy->_end);  goto l404;
  l403:;	  yy->_pos= yypos403; yy->_thunkpos= yythunkpos403;
  }
  l404:;	  goto l401;
  l402:;	  yy->_pos= yypos401; yy->_thunkpos= yythunkpos401;  if (!yyrOFFSET(yy)) goto l399;  if (!yyrexpression(yy)) goto l399;  yyDo(yy, yySet, -1, 0);  yyDo(yy, yy_11_selectStatement, yy->_begin, yy->_end);
  {  int yypos405= yy->_pos, yythunkpos405= yy->_thunkpos;  if (!yyrLIMIT(yy)) goto l405;  if (!yyrexpression(yy)) goto l405;  yyDo(yy, yySet, -2, 0);  yyDo(yy, yy_12_selectStatement, yy->_begin, yy->_end);  goto l406;
  l405:;	  yy->_pos= yypos405; yy->_thunkpos= yythunkpos405;
  }
  l406:;	
  }
  l401:;	  goto l400;
  l399:;	  yy->_pos= yypos399; yy->_thunkpos= yythunkpos399;
  }
  l400:;	
  {  int yypos407= yy->_pos, yythunkpos407= yy->_thunkpos;  if (!yyr_(yy)) goto l407;  if (!yymatchChar(yy, ';')) goto l407;  goto l408;
  l407:;	  yy->_pos= yypos407; yy->_thunkpos= yythunkpos407;
  }
  l408:;	  yyDo(yy, yy_13_selectStatement, yy->_begin, yy->_end);
  yyprintf((stderr, "  ok   %s @ %s\n", "selectStatement", yy->_buf+yy->_pos));  yyDo(yy, yyPop, 10, 0);
  return 1;
  l384:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "selectStatement", yy->_buf+yy->_pos));
  return 0;
}
YY_RULE(int) yyr_(yycontext *yy)
{
  yyprintf((stderr, "%s\n", "_"));
  l410:;	
  {  int yypos411= yy->_pos, yythunkpos411= yy->_thunkpos;  if (!yymatchClass(yy, (unsigned char *)"\000\046\000\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000")) goto l411;  goto l410;
  l411:;	  yy->_pos= yypos411; yy->_thunkpos= yythunkpos411;
  }
  yyprintf((stderr, "  ok   %s @ %s\n", "_", yy->_buf+yy->_pos));
  return 1;
}
YY_RULE(int) yyrn1ql(yycontext *yy)
{  int yypos0= yy->_pos, yythunkpos0= yy->_thunkpos;  yyDo(yy, yyPush, 2, 0);
  yyprintf((stderr, "%s\n", "n1ql"));
  {  int yypos413= yy->_pos, yythunkpos413= yy->_thunkpos;  if (!yyr_(yy)) goto l414;  if (!yyrselectStatement(yy)) goto l414;  yyDo(yy, yySet, -2, 0);  if (!yyr_(yy)) goto l414;
  {  int yypos415= yy->_pos, yythunkpos415= yy->_thunkpos;  int yymaxpos415= yy->_maxpos;  if (!yymatchDot(yy)) goto l415;  yy->_maxpos= yymaxpos415;  goto l414;
  l415:;	  yy->_pos= yypos415; yy->_thunkpos= yythunkpos415;  yy->_maxpos= yymaxpos415;
  }  yyDo(yy, yy_1_n1ql, yy->_begin, yy->_end);  goto l413;
  l414:;	  yy->_pos= yypos413; yy->_thunkpos= yythunkpos413;  if (!yyrselectResults(yy)) goto l412;  yyDo(yy, yySet, -1, 0);
  {  int yypos416= yy->_pos, yythunkpos416= yy->_thunkpos;  int yymaxpos416= yy->_maxpos;  if (!yymatchDot(yy)) goto l416;  yy->_maxpos= yymaxpos416;  goto l412;
  l416:;	  yy->_pos= yypos416; yy->_thunkpos= yythunkpos416;  yy->_maxpos= yymaxpos416;
  }  yyDo(yy, yy_2_n1ql, yy->_begin, yy->_end);
  }
  l413:;	
  yyprintf((stderr, "  ok   %s @ %s\n", "n1ql", yy->_buf+yy->_pos));  yyDo(yy, yyPop, 2, 0);
  return 1;
  l412:;	  yy->_pos= yypos0; yy->_thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "n1ql", yy->_buf+yy->_pos));
  return 0;
}

#ifndef YY_PART

typedef int (*yyrule)(yycontext *yy);

YY_PARSE(int) YYPARSEFROM(YY_CTX_PARAM_ yyrule yystart)
{
  int yyok;
  if (!yyctx->_buflen)
    {
      yyctx->_buflen= YY_BUFFER_SIZE;
      yyctx->_buf= (char *)YY_MALLOC(yyctx, yyctx->_buflen);
      yyctx->_textlen= YY_BUFFER_SIZE;
      yyctx->_text= (char *)YY_MALLOC(yyctx, yyctx->_textlen);
      yyctx->_thunkslen= YY_STACK_SIZE;
      yyctx->_thunks= (yythunk *)YY_MALLOC(yyctx, sizeof(yythunk) * yyctx->_thunkslen);
#ifdef __cplusplus
      yyctx->_vals = new std::vector<YYSTYPE>();
      yyctx->_vals->reserve(YY_STACK_SIZE);
#else
      yyctx->_valslen= YY_STACK_SIZE;
      yyctx->_vals= (YYSTYPE *)YY_MALLOC(yyctx, sizeof(YYSTYPE) * yyctx->_valslen);
      memset(yyctx->_vals, 0, sizeof(YYSTYPE) * yyctx->_valslen);
#endif
      yyctx->_begin= yyctx->_end= yyctx->_pos= yyctx->_limit= yyctx->_maxpos= yyctx->_thunkpos= 0;
    }
  yyctx->_begin= yyctx->_end= yyctx->_pos;
  yyctx->_thunkpos= 0;
#ifdef __cplusplus
  yyctx->_vals->resize(1);
  yyctx->_val = &yyctx->_vals->back();
#else
  yyctx->_val= yyctx->_vals;
#endif
  yyok= yystart(yyctx);
  if (yyok) yyDone(yyctx);
  yyCommit(yyctx);
  return yyok;
}

YY_PARSE(int) YYPARSE(YY_CTX_PARAM)
{
  return YYPARSEFROM(YY_CTX_ARG_ yyrn1ql);
}

YY_PARSE(yycontext *) YYRELEASE(yycontext *yyctx)
{
  if (yyctx->_buflen)
    {
      yyctx->_buflen= 0;
      YY_FREE(yyctx, yyctx->_buf);
      YY_FREE(yyctx, yyctx->_text);
      YY_FREE(yyctx, yyctx->_thunks);
#ifdef __cplusplus
      delete yyctx->_vals;
#else
      YY_FREE(yyctx, yyctx->_vals);
#endif
    }
  return yyctx;
}

#endif
#line 499 "n1ql.leg"

//////// PARSER ENTRY POINT (C++):


#undef __

const char kN1QLEND = '\0';

static int n1ql_input(yycontext *ctx, char *buf, size_t max_size) {
    ctx->stream->get(buf, max_size, kN1QLEND);
    return (int) ctx->stream->gcount();
}


FLMutableDict parse(const string &input, int *errPos) {
    MutableDict result;
    std::stringstream stream(input, std::ios_base::in);
    yycontext ctx = { };
    ctx.stream = &stream;

    bool ok = parse(&ctx) != 0;
    if (ok) {
        result = ctx._;
    } else {
        *errPos = ctx._maxpos;
    }
    yyrelease(&ctx);
    return (FLMutableDict) FLValue_Retain(result);
}

}

