//
// SecureRandomize.hh
//
// Copyright (c) 2015 Couchbase, Inc All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

#pragma once
#include "fleece/slice.hh"
#include <stdint.h>


namespace litecore {

    /** Fills memory with cryptographically-secure random bytes. */
    void SecureRandomize(fleece::slice);

    /** The size of a UUID generated by \ref GenerateUUID. */
    static constexpr size_t SizeOfUUID = 16;

    /** Generates a random unique identifier, conforming to RFC 4122 Type 4.
        The size of the slice must be \ref SizeOfUUID. */
    void GenerateUUID(fleece::slice);

    /** Returns a random integer in the range [0 .. UINT32_MAX].
        @warn  On some platforms this RNG is cryptographically secure, on others less so. */
    uint32_t RandomNumber();

    /** Returns a random integer in the range [0 .. upperBound-1].
        @warn  On some platforms this RNG is cryptographically secure, on others less so. */
    uint32_t RandomNumber(uint32_t upperBound);
}
